//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Colorful_AnalogTVWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Colorful.AnalogTV), typeof(Colorful.BaseEffect));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AutomaticPhase", get_AutomaticPhase, set_AutomaticPhase);
		L.RegVar("Phase", get_Phase, set_Phase);
		L.RegVar("ConvertToGrayscale", get_ConvertToGrayscale, set_ConvertToGrayscale);
		L.RegVar("NoiseIntensity", get_NoiseIntensity, set_NoiseIntensity);
		L.RegVar("ScanlinesIntensity", get_ScanlinesIntensity, set_ScanlinesIntensity);
		L.RegVar("ScanlinesCount", get_ScanlinesCount, set_ScanlinesCount);
		L.RegVar("ScanlinesOffset", get_ScanlinesOffset, set_ScanlinesOffset);
		L.RegVar("VerticalScanlines", get_VerticalScanlines, set_VerticalScanlines);
		L.RegVar("Distortion", get_Distortion, set_Distortion);
		L.RegVar("CubicDistortion", get_CubicDistortion, set_CubicDistortion);
		L.RegVar("Scale", get_Scale, set_Scale);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutomaticPhase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool ret = obj.AutomaticPhase;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutomaticPhase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Phase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.Phase;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Phase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ConvertToGrayscale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool ret = obj.ConvertToGrayscale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ConvertToGrayscale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NoiseIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.NoiseIntensity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NoiseIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ScanlinesIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.ScanlinesIntensity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ScanlinesCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			int ret = obj.ScanlinesCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ScanlinesOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.ScanlinesOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VerticalScanlines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool ret = obj.VerticalScanlines;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticalScanlines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Distortion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.Distortion;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Distortion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CubicDistortion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.CubicDistortion;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CubicDistortion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float ret = obj.Scale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Scale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutomaticPhase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AutomaticPhase = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutomaticPhase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Phase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Phase = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Phase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ConvertToGrayscale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ConvertToGrayscale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ConvertToGrayscale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NoiseIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.NoiseIntensity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NoiseIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ScanlinesIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ScanlinesIntensity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ScanlinesCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ScanlinesCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ScanlinesOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ScanlinesOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ScanlinesOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_VerticalScanlines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.VerticalScanlines = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticalScanlines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Distortion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Distortion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Distortion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CubicDistortion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.CubicDistortion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CubicDistortion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.AnalogTV obj = (Colorful.AnalogTV)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Scale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Scale on a nil value");
		}
	}
}

