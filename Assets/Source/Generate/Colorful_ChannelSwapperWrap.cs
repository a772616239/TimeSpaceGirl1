//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Colorful_ChannelSwapperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Colorful.ChannelSwapper), typeof(Colorful.BaseEffect));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("RedSource", get_RedSource, set_RedSource);
		L.RegVar("GreenSource", get_GreenSource, set_GreenSource);
		L.RegVar("BlueSource", get_BlueSource, set_BlueSource);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RedSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel ret = obj.RedSource;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GreenSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel ret = obj.GreenSource;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlueSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel ret = obj.BlueSource;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RedSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel arg0 = (Colorful.ChannelSwapper.Channel)ToLua.CheckObject(L, 2, typeof(Colorful.ChannelSwapper.Channel));
			obj.RedSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GreenSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel arg0 = (Colorful.ChannelSwapper.Channel)ToLua.CheckObject(L, 2, typeof(Colorful.ChannelSwapper.Channel));
			obj.GreenSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlueSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ChannelSwapper obj = (Colorful.ChannelSwapper)o;
			Colorful.ChannelSwapper.Channel arg0 = (Colorful.ChannelSwapper.Channel)ToLua.CheckObject(L, 2, typeof(Colorful.ChannelSwapper.Channel));
			obj.BlueSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueSource on a nil value");
		}
	}
}

