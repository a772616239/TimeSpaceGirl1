//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Colorful_ContrastVignetteWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Colorful.ContrastVignette), typeof(Colorful.BaseEffect));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Center", get_Center, set_Center);
		L.RegVar("Sharpness", get_Sharpness, set_Sharpness);
		L.RegVar("Darkness", get_Darkness, set_Darkness);
		L.RegVar("Contrast", get_Contrast, set_Contrast);
		L.RegVar("ContrastCoeff", get_ContrastCoeff, set_ContrastCoeff);
		L.RegVar("EdgeBlending", get_EdgeBlending, set_EdgeBlending);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Center(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			UnityEngine.Vector2 ret = obj.Center;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Center on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sharpness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float ret = obj.Sharpness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Sharpness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Darkness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float ret = obj.Darkness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Darkness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float ret = obj.Contrast;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Contrast on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ContrastCoeff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			UnityEngine.Vector3 ret = obj.ContrastCoeff;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContrastCoeff on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EdgeBlending(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float ret = obj.EdgeBlending;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EdgeBlending on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Center(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.Center = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Center on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Sharpness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Sharpness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Sharpness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Darkness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Darkness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Darkness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Contrast = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Contrast on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ContrastCoeff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.ContrastCoeff = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContrastCoeff on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EdgeBlending(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.ContrastVignette obj = (Colorful.ContrastVignette)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.EdgeBlending = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EdgeBlending on a nil value");
		}
	}
}

