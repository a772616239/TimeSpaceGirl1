//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Colorful_SCurveContrastWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Colorful.SCurveContrast), typeof(Colorful.BaseEffect));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("RedSteepness", get_RedSteepness, set_RedSteepness);
		L.RegVar("RedGamma", get_RedGamma, set_RedGamma);
		L.RegVar("GreenSteepness", get_GreenSteepness, set_GreenSteepness);
		L.RegVar("GreenGamma", get_GreenGamma, set_GreenGamma);
		L.RegVar("BlueSteepness", get_BlueSteepness, set_BlueSteepness);
		L.RegVar("BlueGamma", get_BlueGamma, set_BlueGamma);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RedSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.RedSteepness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RedGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.RedGamma;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedGamma on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GreenSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.GreenSteepness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GreenGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.GreenGamma;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenGamma on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlueSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.BlueSteepness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlueGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float ret = obj.BlueGamma;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueGamma on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RedSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RedSteepness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RedGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RedGamma = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RedGamma on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GreenSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.GreenSteepness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GreenGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.GreenGamma = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GreenGamma on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlueSteepness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.BlueSteepness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueSteepness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlueGamma(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Colorful.SCurveContrast obj = (Colorful.SCurveContrast)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.BlueGamma = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlueGamma on a nil value");
		}
	}
}

