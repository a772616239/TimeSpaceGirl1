//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(System.Action<GameLogic.ByteBuffer>), factory.System_Action_GameLogic_ByteBuffer);
		dict.Add(typeof(DG.Tweening.TweenCallback), factory.DG_Tweening_TweenCallback);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(UnityEngine.Events.UnityAction<int>), factory.UnityEngine_Events_UnityAction_int);
		dict.Add(typeof(UnityEngine.Events.UnityAction<string>), factory.UnityEngine_Events_UnityAction_string);
		dict.Add(typeof(UnityEngine.Events.UnityAction<float>), factory.UnityEngine_Events_UnityAction_float);
		dict.Add(typeof(UnityEngine.Events.UnityAction<bool>), factory.UnityEngine_Events_UnityAction_bool);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.Vector2>), factory.UnityEngine_Events_UnityAction_UnityEngine_Vector2);
		dict.Add(typeof(GameLogic.UnityActionInt), factory.GameLogic_UnityActionInt);
		dict.Add(typeof(GameLogic.UnityActionFloat), factory.GameLogic_UnityActionFloat);
		dict.Add(typeof(GameLogic.UnityActionString), factory.GameLogic_UnityActionString);
		dict.Add(typeof(GameLogic.UnityActionBool), factory.GameLogic_UnityActionBool);
		dict.Add(typeof(GameLogic.ColliderEventDelegate), factory.GameLogic_ColliderEventDelegate);
		dict.Add(typeof(GameLogic.PointerEventDelegate), factory.GameLogic_PointerEventDelegate);
		dict.Add(typeof(GameLogic.BaseEventDelegate), factory.GameLogic_BaseEventDelegate);
		dict.Add(typeof(GameLogic.AxisEventDelegate), factory.GameLogic_AxisEventDelegate);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(GameLogic.GameEventHandler), factory.GameLogic_GameEventHandler);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<float>), factory.DG_Tweening_Core_DOGetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<float>), factory.DG_Tweening_Core_DOSetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<double>), factory.DG_Tweening_Core_DOGetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<double>), factory.DG_Tweening_Core_DOSetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<int>), factory.DG_Tweening_Core_DOGetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<int>), factory.DG_Tweening_Core_DOSetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<uint>), factory.DG_Tweening_Core_DOGetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<uint>), factory.DG_Tweening_Core_DOSetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<long>), factory.DG_Tweening_Core_DOGetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<long>), factory.DG_Tweening_Core_DOSetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<ulong>), factory.DG_Tweening_Core_DOGetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<ulong>), factory.DG_Tweening_Core_DOSetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<string>), factory.DG_Tweening_Core_DOGetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<string>), factory.DG_Tweening_Core_DOSetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		//dict.Add(typeof(UnityEngine.Application.MemoryUsageChangedCallback), factory.UnityEngine_Application_MemoryUsageChangedCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Action<string>), factory.System_Action_string);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>), factory.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		dict.Add(typeof(UnityEngine.Physics.ContactEventDelegate), factory.UnityEngine_Physics_ContactEventDelegate);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(System.Action<int,int>), factory.System_Action_int_int);
		dict.Add(typeof(System.Action<int,string>), factory.System_Action_int_string);
		dict.Add(typeof(UnityEngine.Canvas.WillRenderCanvases), factory.UnityEngine_Canvas_WillRenderCanvases);
		dict.Add(typeof(UnityEngine.UI.InputField.OnValidateInput), factory.UnityEngine_UI_InputField_OnValidateInput);
		dict.Add(typeof(UnityEngine.Events.UnityAction<string,UnityEngine.Object>), factory.UnityEngine_Events_UnityAction_string_UnityEngine_Object);
		dict.Add(typeof(System.Action<IAPResult>), factory.System_Action_IAPResult);
		dict.Add(typeof(SuperTextMesh.OnCompleteAction), factory.SuperTextMesh_OnCompleteAction);
		dict.Add(typeof(SuperTextMesh.OnUndrawnAction), factory.SuperTextMesh_OnUndrawnAction);
		dict.Add(typeof(SuperTextMesh.OnRebuildAction), factory.SuperTextMesh_OnRebuildAction);
		dict.Add(typeof(SuperTextMesh.OnPrintAction), factory.SuperTextMesh_OnPrintAction);
		dict.Add(typeof(SuperTextMesh.OnCustomAction), factory.SuperTextMesh_OnCustomAction);
		dict.Add(typeof(SuperTextMesh.OnVertexModAction), factory.SuperTextMesh_OnVertexModAction);
		dict.Add(typeof(SuperTextMesh.OnPreParseAction), factory.SuperTextMesh_OnPreParseAction);
		dict.Add(typeof(System.Action<LoginData>), factory.System_Action_LoginData);
		dict.Add(typeof(SDK.SDKManager.InitLaunchAction), factory.SDK_SDKManager_InitLaunchAction);
		dict.Add(typeof(SDK.SDKManager.RegisterAction), factory.SDK_SDKManager_RegisterAction);
		dict.Add(typeof(SDK.SDKManager.LoginAction), factory.SDK_SDKManager_LoginAction);
		dict.Add(typeof(SDK.SDKManager.PayAction), factory.SDK_SDKManager_PayAction);
		dict.Add(typeof(SDK.SDKManager.SwitchAccountAction), factory.SDK_SDKManager_SwitchAccountAction);
		dict.Add(typeof(SDK.SDKManager.LogoutAction), factory.SDK_SDKManager_LogoutAction);
		dict.Add(typeof(SDK.SDKManager.MessageAction), factory.SDK_SDKManager_MessageAction);
		dict.Add(typeof(CallBack<UnityEngine.Vector3>), factory.CallBack_UnityEngine_Vector3);
		dict.Add(typeof(CallBack), factory.CallBack);
		dict.Add(typeof(System.Action<bool,ResUpdate.ResourcesUpdateState,object>), factory.System_Action_bool_ResUpdate_ResourcesUpdateState_object);
		dict.Add(typeof(Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate), factory.Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate);
		dict.Add(typeof(Spine.Unity.UpdateBonesDelegate), factory.Spine_Unity_UpdateBonesDelegate);
		dict.Add(typeof(Spine.Unity.MeshGeneratorDelegate), factory.Spine_Unity_MeshGeneratorDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		dict.Add(typeof(System.Func<string,bool>), factory.System_Func_string_bool);
		dict.Add(typeof(Spine.AnimationState.TrackEntryDelegate), factory.Spine_AnimationState_TrackEntryDelegate);
		dict.Add(typeof(Spine.AnimationState.TrackEntryEventDelegate), factory.Spine_AnimationState_TrackEntryEventDelegate);
		dict.Add(typeof(System.Func<UnityEngine.UI.ILayoutElement,float>), factory.System_Func_UnityEngine_UI_ILayoutElement_float);
		dict.Add(typeof(System.Action<UnityEngine.GameObject>), factory.System_Action_UnityEngine_GameObject);
		dict.Add(typeof(System.Action<UnityEngine.RenderTexture>), factory.System_Action_UnityEngine_RenderTexture);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.EventHandler), factory.UnityEngine_Video_VideoPlayer_EventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.ErrorEventHandler), factory.UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.TimeEventHandler), factory.UnityEngine_Video_VideoPlayer_TimeEventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.FrameReadyEventHandler), factory.UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<System.Action<GameLogic.ByteBuffer>>.Init(factory.System_Action_GameLogic_ByteBuffer);
		DelegateTraits<DG.Tweening.TweenCallback>.Init(factory.DG_Tweening_TweenCallback);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<UnityEngine.Events.UnityAction<int>>.Init(factory.UnityEngine_Events_UnityAction_int);
		DelegateTraits<UnityEngine.Events.UnityAction<string>>.Init(factory.UnityEngine_Events_UnityAction_string);
		DelegateTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.UnityEngine_Events_UnityAction_float);
		DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.UnityEngine_Events_UnityAction_bool);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_Vector2);
		DelegateTraits<GameLogic.UnityActionInt>.Init(factory.GameLogic_UnityActionInt);
		DelegateTraits<GameLogic.UnityActionFloat>.Init(factory.GameLogic_UnityActionFloat);
		DelegateTraits<GameLogic.UnityActionString>.Init(factory.GameLogic_UnityActionString);
		DelegateTraits<GameLogic.UnityActionBool>.Init(factory.GameLogic_UnityActionBool);
		DelegateTraits<GameLogic.ColliderEventDelegate>.Init(factory.GameLogic_ColliderEventDelegate);
		DelegateTraits<GameLogic.PointerEventDelegate>.Init(factory.GameLogic_PointerEventDelegate);
		DelegateTraits<GameLogic.BaseEventDelegate>.Init(factory.GameLogic_BaseEventDelegate);
		DelegateTraits<GameLogic.AxisEventDelegate>.Init(factory.GameLogic_AxisEventDelegate);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<GameLogic.GameEventHandler>.Init(factory.GameLogic_GameEventHandler);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.DG_Tweening_Core_DOGetter_float);
		DelegateTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.DG_Tweening_Core_DOSetter_float);
		DelegateTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.DG_Tweening_Core_DOGetter_double);
		DelegateTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.DG_Tweening_Core_DOSetter_double);
		DelegateTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.DG_Tweening_Core_DOGetter_int);
		DelegateTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.DG_Tweening_Core_DOSetter_int);
		DelegateTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.DG_Tweening_Core_DOGetter_uint);
		DelegateTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.DG_Tweening_Core_DOSetter_uint);
		DelegateTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.DG_Tweening_Core_DOGetter_long);
		DelegateTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.DG_Tweening_Core_DOSetter_long);
		DelegateTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.DG_Tweening_Core_DOGetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.DG_Tweening_Core_DOSetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.DG_Tweening_Core_DOGetter_string);
		DelegateTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.DG_Tweening_Core_DOSetter_string);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		//DelegateTraits<UnityEngine.Application.MemoryUsageChangedCallback>.Init(factory.UnityEngine_Application_MemoryUsageChangedCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Action<string>>.Init(factory.System_Action_string);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(factory.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		DelegateTraits<UnityEngine.Physics.ContactEventDelegate>.Init(factory.UnityEngine_Physics_ContactEventDelegate);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<System.Action<int,int>>.Init(factory.System_Action_int_int);
		DelegateTraits<System.Action<int,string>>.Init(factory.System_Action_int_string);
		DelegateTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.UnityEngine_Canvas_WillRenderCanvases);
		DelegateTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.UnityEngine_UI_InputField_OnValidateInput);
		DelegateTraits<UnityEngine.Events.UnityAction<string,UnityEngine.Object>>.Init(factory.UnityEngine_Events_UnityAction_string_UnityEngine_Object);
		DelegateTraits<System.Action<IAPResult>>.Init(factory.System_Action_IAPResult);
		DelegateTraits<SuperTextMesh.OnCompleteAction>.Init(factory.SuperTextMesh_OnCompleteAction);
		DelegateTraits<SuperTextMesh.OnUndrawnAction>.Init(factory.SuperTextMesh_OnUndrawnAction);
		DelegateTraits<SuperTextMesh.OnRebuildAction>.Init(factory.SuperTextMesh_OnRebuildAction);
		DelegateTraits<SuperTextMesh.OnPrintAction>.Init(factory.SuperTextMesh_OnPrintAction);
		DelegateTraits<SuperTextMesh.OnCustomAction>.Init(factory.SuperTextMesh_OnCustomAction);
		DelegateTraits<SuperTextMesh.OnVertexModAction>.Init(factory.SuperTextMesh_OnVertexModAction);
		DelegateTraits<SuperTextMesh.OnPreParseAction>.Init(factory.SuperTextMesh_OnPreParseAction);
		DelegateTraits<System.Action<LoginData>>.Init(factory.System_Action_LoginData);
		DelegateTraits<SDK.SDKManager.InitLaunchAction>.Init(factory.SDK_SDKManager_InitLaunchAction);
		DelegateTraits<SDK.SDKManager.RegisterAction>.Init(factory.SDK_SDKManager_RegisterAction);
		DelegateTraits<SDK.SDKManager.LoginAction>.Init(factory.SDK_SDKManager_LoginAction);
		DelegateTraits<SDK.SDKManager.PayAction>.Init(factory.SDK_SDKManager_PayAction);
		DelegateTraits<SDK.SDKManager.SwitchAccountAction>.Init(factory.SDK_SDKManager_SwitchAccountAction);
		DelegateTraits<SDK.SDKManager.LogoutAction>.Init(factory.SDK_SDKManager_LogoutAction);
		DelegateTraits<SDK.SDKManager.MessageAction>.Init(factory.SDK_SDKManager_MessageAction);
		DelegateTraits<CallBack<UnityEngine.Vector3>>.Init(factory.CallBack_UnityEngine_Vector3);
		DelegateTraits<CallBack>.Init(factory.CallBack);
		DelegateTraits<System.Action<bool,ResUpdate.ResourcesUpdateState,object>>.Init(factory.System_Action_bool_ResUpdate_ResourcesUpdateState_object);
		DelegateTraits<Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate>.Init(factory.Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate);
		DelegateTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Spine_Unity_UpdateBonesDelegate);
		DelegateTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Spine_Unity_MeshGeneratorDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		DelegateTraits<System.Func<string,bool>>.Init(factory.System_Func_string_bool);
		DelegateTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Spine_AnimationState_TrackEntryDelegate);
		DelegateTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Spine_AnimationState_TrackEntryEventDelegate);
		DelegateTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Init(factory.System_Func_UnityEngine_UI_ILayoutElement_float);
		DelegateTraits<System.Action<UnityEngine.GameObject>>.Init(factory.System_Action_UnityEngine_GameObject);
		DelegateTraits<System.Action<UnityEngine.RenderTexture>>.Init(factory.System_Action_UnityEngine_RenderTexture);
		DelegateTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_EventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_TimeEventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<System.Action<GameLogic.ByteBuffer>>.Init(factory.Check_System_Action_GameLogic_ByteBuffer);
		TypeTraits<DG.Tweening.TweenCallback>.Init(factory.Check_DG_Tweening_TweenCallback);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<UnityEngine.Events.UnityAction<int>>.Init(factory.Check_UnityEngine_Events_UnityAction_int);
		TypeTraits<UnityEngine.Events.UnityAction<string>>.Init(factory.Check_UnityEngine_Events_UnityAction_string);
		TypeTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.Check_UnityEngine_Events_UnityAction_float);
		TypeTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.Check_UnityEngine_Events_UnityAction_bool);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_Vector2);
		TypeTraits<GameLogic.UnityActionInt>.Init(factory.Check_GameLogic_UnityActionInt);
		TypeTraits<GameLogic.UnityActionFloat>.Init(factory.Check_GameLogic_UnityActionFloat);
		TypeTraits<GameLogic.UnityActionString>.Init(factory.Check_GameLogic_UnityActionString);
		TypeTraits<GameLogic.UnityActionBool>.Init(factory.Check_GameLogic_UnityActionBool);
		TypeTraits<GameLogic.ColliderEventDelegate>.Init(factory.Check_GameLogic_ColliderEventDelegate);
		TypeTraits<GameLogic.PointerEventDelegate>.Init(factory.Check_GameLogic_PointerEventDelegate);
		TypeTraits<GameLogic.BaseEventDelegate>.Init(factory.Check_GameLogic_BaseEventDelegate);
		TypeTraits<GameLogic.AxisEventDelegate>.Init(factory.Check_GameLogic_AxisEventDelegate);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<GameLogic.GameEventHandler>.Init(factory.Check_GameLogic_GameEventHandler);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.Check_DG_Tweening_Core_DOGetter_float);
		TypeTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.Check_DG_Tweening_Core_DOSetter_float);
		TypeTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.Check_DG_Tweening_Core_DOGetter_double);
		TypeTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.Check_DG_Tweening_Core_DOSetter_double);
		TypeTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.Check_DG_Tweening_Core_DOGetter_int);
		TypeTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.Check_DG_Tweening_Core_DOSetter_int);
		TypeTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOGetter_uint);
		TypeTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOSetter_uint);
		TypeTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.Check_DG_Tweening_Core_DOGetter_long);
		TypeTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.Check_DG_Tweening_Core_DOSetter_long);
		TypeTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOGetter_ulong);
		TypeTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOSetter_ulong);
		TypeTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.Check_DG_Tweening_Core_DOGetter_string);
		TypeTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.Check_DG_Tweening_Core_DOSetter_string);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.MemoryUsageChangedCallback>.Init(factory.Check_UnityEngine_Application_MemoryUsageChangedCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Action<string>>.Init(factory.Check_System_Action_string);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(factory.Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		TypeTraits<UnityEngine.Physics.ContactEventDelegate>.Init(factory.Check_UnityEngine_Physics_ContactEventDelegate);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<System.Action<int,int>>.Init(factory.Check_System_Action_int_int);
		TypeTraits<System.Action<int,string>>.Init(factory.Check_System_Action_int_string);
		TypeTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.Check_UnityEngine_Canvas_WillRenderCanvases);
		TypeTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.Check_UnityEngine_UI_InputField_OnValidateInput);
		TypeTraits<UnityEngine.Events.UnityAction<string,UnityEngine.Object>>.Init(factory.Check_UnityEngine_Events_UnityAction_string_UnityEngine_Object);
		TypeTraits<System.Action<IAPResult>>.Init(factory.Check_System_Action_IAPResult);
		TypeTraits<SuperTextMesh.OnCompleteAction>.Init(factory.Check_SuperTextMesh_OnCompleteAction);
		TypeTraits<SuperTextMesh.OnUndrawnAction>.Init(factory.Check_SuperTextMesh_OnUndrawnAction);
		TypeTraits<SuperTextMesh.OnRebuildAction>.Init(factory.Check_SuperTextMesh_OnRebuildAction);
		TypeTraits<SuperTextMesh.OnPrintAction>.Init(factory.Check_SuperTextMesh_OnPrintAction);
		TypeTraits<SuperTextMesh.OnCustomAction>.Init(factory.Check_SuperTextMesh_OnCustomAction);
		TypeTraits<SuperTextMesh.OnVertexModAction>.Init(factory.Check_SuperTextMesh_OnVertexModAction);
		TypeTraits<SuperTextMesh.OnPreParseAction>.Init(factory.Check_SuperTextMesh_OnPreParseAction);
		TypeTraits<System.Action<LoginData>>.Init(factory.Check_System_Action_LoginData);
		TypeTraits<SDK.SDKManager.InitLaunchAction>.Init(factory.Check_SDK_SDKManager_InitLaunchAction);
		TypeTraits<SDK.SDKManager.RegisterAction>.Init(factory.Check_SDK_SDKManager_RegisterAction);
		TypeTraits<SDK.SDKManager.LoginAction>.Init(factory.Check_SDK_SDKManager_LoginAction);
		TypeTraits<SDK.SDKManager.PayAction>.Init(factory.Check_SDK_SDKManager_PayAction);
		TypeTraits<SDK.SDKManager.SwitchAccountAction>.Init(factory.Check_SDK_SDKManager_SwitchAccountAction);
		TypeTraits<SDK.SDKManager.LogoutAction>.Init(factory.Check_SDK_SDKManager_LogoutAction);
		TypeTraits<SDK.SDKManager.MessageAction>.Init(factory.Check_SDK_SDKManager_MessageAction);
		TypeTraits<CallBack<UnityEngine.Vector3>>.Init(factory.Check_CallBack_UnityEngine_Vector3);
		TypeTraits<CallBack>.Init(factory.Check_CallBack);
		TypeTraits<System.Action<bool,ResUpdate.ResourcesUpdateState,object>>.Init(factory.Check_System_Action_bool_ResUpdate_ResourcesUpdateState_object);
		TypeTraits<Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate>.Init(factory.Check_Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate);
		TypeTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Check_Spine_Unity_UpdateBonesDelegate);
		TypeTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Check_Spine_Unity_MeshGeneratorDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_InstructionDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		TypeTraits<System.Func<string,bool>>.Init(factory.Check_System_Func_string_bool);
		TypeTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryDelegate);
		TypeTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryEventDelegate);
		TypeTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Init(factory.Check_System_Func_UnityEngine_UI_ILayoutElement_float);
		TypeTraits<System.Action<UnityEngine.GameObject>>.Init(factory.Check_System_Action_UnityEngine_GameObject);
		TypeTraits<System.Action<UnityEngine.RenderTexture>>.Init(factory.Check_System_Action_UnityEngine_RenderTexture);
		TypeTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_EventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_TimeEventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<System.Action<GameLogic.ByteBuffer>>.Push = factory.Push_System_Action_GameLogic_ByteBuffer;
		StackTraits<DG.Tweening.TweenCallback>.Push = factory.Push_DG_Tweening_TweenCallback;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<UnityEngine.Events.UnityAction<int>>.Push = factory.Push_UnityEngine_Events_UnityAction_int;
		StackTraits<UnityEngine.Events.UnityAction<string>>.Push = factory.Push_UnityEngine_Events_UnityAction_string;
		StackTraits<UnityEngine.Events.UnityAction<float>>.Push = factory.Push_UnityEngine_Events_UnityAction_float;
		StackTraits<UnityEngine.Events.UnityAction<bool>>.Push = factory.Push_UnityEngine_Events_UnityAction_bool;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_Vector2;
		StackTraits<GameLogic.UnityActionInt>.Push = factory.Push_GameLogic_UnityActionInt;
		StackTraits<GameLogic.UnityActionFloat>.Push = factory.Push_GameLogic_UnityActionFloat;
		StackTraits<GameLogic.UnityActionString>.Push = factory.Push_GameLogic_UnityActionString;
		StackTraits<GameLogic.UnityActionBool>.Push = factory.Push_GameLogic_UnityActionBool;
		StackTraits<GameLogic.ColliderEventDelegate>.Push = factory.Push_GameLogic_ColliderEventDelegate;
		StackTraits<GameLogic.PointerEventDelegate>.Push = factory.Push_GameLogic_PointerEventDelegate;
		StackTraits<GameLogic.BaseEventDelegate>.Push = factory.Push_GameLogic_BaseEventDelegate;
		StackTraits<GameLogic.AxisEventDelegate>.Push = factory.Push_GameLogic_AxisEventDelegate;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<GameLogic.GameEventHandler>.Push = factory.Push_GameLogic_GameEventHandler;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<DG.Tweening.Core.DOGetter<float>>.Push = factory.Push_DG_Tweening_Core_DOGetter_float;
		StackTraits<DG.Tweening.Core.DOSetter<float>>.Push = factory.Push_DG_Tweening_Core_DOSetter_float;
		StackTraits<DG.Tweening.Core.DOGetter<double>>.Push = factory.Push_DG_Tweening_Core_DOGetter_double;
		StackTraits<DG.Tweening.Core.DOSetter<double>>.Push = factory.Push_DG_Tweening_Core_DOSetter_double;
		StackTraits<DG.Tweening.Core.DOGetter<int>>.Push = factory.Push_DG_Tweening_Core_DOGetter_int;
		StackTraits<DG.Tweening.Core.DOSetter<int>>.Push = factory.Push_DG_Tweening_Core_DOSetter_int;
		StackTraits<DG.Tweening.Core.DOGetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOGetter_uint;
		StackTraits<DG.Tweening.Core.DOSetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOSetter_uint;
		StackTraits<DG.Tweening.Core.DOGetter<long>>.Push = factory.Push_DG_Tweening_Core_DOGetter_long;
		StackTraits<DG.Tweening.Core.DOSetter<long>>.Push = factory.Push_DG_Tweening_Core_DOSetter_long;
		StackTraits<DG.Tweening.Core.DOGetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOGetter_ulong;
		StackTraits<DG.Tweening.Core.DOSetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOSetter_ulong;
		StackTraits<DG.Tweening.Core.DOGetter<string>>.Push = factory.Push_DG_Tweening_Core_DOGetter_string;
		StackTraits<DG.Tweening.Core.DOSetter<string>>.Push = factory.Push_DG_Tweening_Core_DOSetter_string;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.MemoryUsageChangedCallback>.Push = factory.Push_UnityEngine_Application_MemoryUsageChangedCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Action<string>>.Push = factory.Push_System_Action_string;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Push = factory.Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair;
		StackTraits<UnityEngine.Physics.ContactEventDelegate>.Push = factory.Push_UnityEngine_Physics_ContactEventDelegate;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<System.Action<int,int>>.Push = factory.Push_System_Action_int_int;
		StackTraits<System.Action<int,string>>.Push = factory.Push_System_Action_int_string;
		StackTraits<UnityEngine.Canvas.WillRenderCanvases>.Push = factory.Push_UnityEngine_Canvas_WillRenderCanvases;
		StackTraits<UnityEngine.UI.InputField.OnValidateInput>.Push = factory.Push_UnityEngine_UI_InputField_OnValidateInput;
		StackTraits<UnityEngine.Events.UnityAction<string,UnityEngine.Object>>.Push = factory.Push_UnityEngine_Events_UnityAction_string_UnityEngine_Object;
		StackTraits<System.Action<IAPResult>>.Push = factory.Push_System_Action_IAPResult;
		StackTraits<SuperTextMesh.OnCompleteAction>.Push = factory.Push_SuperTextMesh_OnCompleteAction;
		StackTraits<SuperTextMesh.OnUndrawnAction>.Push = factory.Push_SuperTextMesh_OnUndrawnAction;
		StackTraits<SuperTextMesh.OnRebuildAction>.Push = factory.Push_SuperTextMesh_OnRebuildAction;
		StackTraits<SuperTextMesh.OnPrintAction>.Push = factory.Push_SuperTextMesh_OnPrintAction;
		StackTraits<SuperTextMesh.OnCustomAction>.Push = factory.Push_SuperTextMesh_OnCustomAction;
		StackTraits<SuperTextMesh.OnVertexModAction>.Push = factory.Push_SuperTextMesh_OnVertexModAction;
		StackTraits<SuperTextMesh.OnPreParseAction>.Push = factory.Push_SuperTextMesh_OnPreParseAction;
		StackTraits<System.Action<LoginData>>.Push = factory.Push_System_Action_LoginData;
		StackTraits<SDK.SDKManager.InitLaunchAction>.Push = factory.Push_SDK_SDKManager_InitLaunchAction;
		StackTraits<SDK.SDKManager.RegisterAction>.Push = factory.Push_SDK_SDKManager_RegisterAction;
		StackTraits<SDK.SDKManager.LoginAction>.Push = factory.Push_SDK_SDKManager_LoginAction;
		StackTraits<SDK.SDKManager.PayAction>.Push = factory.Push_SDK_SDKManager_PayAction;
		StackTraits<SDK.SDKManager.SwitchAccountAction>.Push = factory.Push_SDK_SDKManager_SwitchAccountAction;
		StackTraits<SDK.SDKManager.LogoutAction>.Push = factory.Push_SDK_SDKManager_LogoutAction;
		StackTraits<SDK.SDKManager.MessageAction>.Push = factory.Push_SDK_SDKManager_MessageAction;
		StackTraits<CallBack<UnityEngine.Vector3>>.Push = factory.Push_CallBack_UnityEngine_Vector3;
		StackTraits<CallBack>.Push = factory.Push_CallBack;
		StackTraits<System.Action<bool,ResUpdate.ResourcesUpdateState,object>>.Push = factory.Push_System_Action_bool_ResUpdate_ResourcesUpdateState_object;
		StackTraits<Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate>.Push = factory.Push_Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate;
		StackTraits<Spine.Unity.UpdateBonesDelegate>.Push = factory.Push_Spine_Unity_UpdateBonesDelegate;
		StackTraits<Spine.Unity.MeshGeneratorDelegate>.Push = factory.Push_Spine_Unity_MeshGeneratorDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_InstructionDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate;
		StackTraits<System.Func<string,bool>>.Push = factory.Push_System_Func_string_bool;
		StackTraits<Spine.AnimationState.TrackEntryDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryDelegate;
		StackTraits<Spine.AnimationState.TrackEntryEventDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryEventDelegate;
		StackTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Push = factory.Push_System_Func_UnityEngine_UI_ILayoutElement_float;
		StackTraits<System.Action<UnityEngine.GameObject>>.Push = factory.Push_System_Action_UnityEngine_GameObject;
		StackTraits<System.Action<UnityEngine.RenderTexture>>.Push = factory.Push_System_Action_UnityEngine_RenderTexture;
		StackTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_EventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_ErrorEventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_TimeEventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_GameLogic_ByteBuffer_Event : LuaDelegate
	{
		public System_Action_GameLogic_ByteBuffer_Event(LuaFunction func) : base(func) { }
		public System_Action_GameLogic_ByteBuffer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GameLogic.ByteBuffer param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GameLogic.ByteBuffer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<GameLogic.ByteBuffer> System_Action_GameLogic_ByteBuffer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<GameLogic.ByteBuffer> fn = delegate(GameLogic.ByteBuffer param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_GameLogic_ByteBuffer_Event target = new System_Action_GameLogic_ByteBuffer_Event(func);
			System.Action<GameLogic.ByteBuffer> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_GameLogic_ByteBuffer_Event target = new System_Action_GameLogic_ByteBuffer_Event(func, self);
			System.Action<GameLogic.ByteBuffer> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_GameLogic_ByteBuffer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<GameLogic.ByteBuffer>), L, pos);
	}

	void Push_System_Action_GameLogic_ByteBuffer(IntPtr L, System.Action<GameLogic.ByteBuffer> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback DG_Tweening_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func);
			DG.Tweening.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func, self);
			DG.Tweening.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.TweenCallback), L, pos);
	}

	void Push_DG_Tweening_TweenCallback(IntPtr L, DG.Tweening.TweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_int_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_int_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<int> UnityEngine_Events_UnityAction_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_int_Event target = new UnityEngine_Events_UnityAction_int_Event(func);
			UnityEngine.Events.UnityAction<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_int_Event target = new UnityEngine_Events_UnityAction_int_Event(func, self);
			UnityEngine.Events.UnityAction<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<int>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_int(IntPtr L, UnityEngine.Events.UnityAction<int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_string_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<string> UnityEngine_Events_UnityAction_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func);
			UnityEngine.Events.UnityAction<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func, self);
			UnityEngine.Events.UnityAction<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<string>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_string(IntPtr L, UnityEngine.Events.UnityAction<string> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_float_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<float> UnityEngine_Events_UnityAction_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func);
			UnityEngine.Events.UnityAction<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func, self);
			UnityEngine.Events.UnityAction<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<float>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_float(IntPtr L, UnityEngine.Events.UnityAction<float> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_bool_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<bool> UnityEngine_Events_UnityAction_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func);
			UnityEngine.Events.UnityAction<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func, self);
			UnityEngine.Events.UnityAction<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<bool>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_bool(IntPtr L, UnityEngine.Events.UnityAction<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.Vector2> UnityEngine_Events_UnityAction_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<UnityEngine.Vector2>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_Vector2(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_UnityActionInt_Event : LuaDelegate
	{
		public GameLogic_UnityActionInt_Event(LuaFunction func) : base(func) { }
		public GameLogic_UnityActionInt_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.UnityActionInt GameLogic_UnityActionInt(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.UnityActionInt fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_UnityActionInt_Event target = new GameLogic_UnityActionInt_Event(func);
			GameLogic.UnityActionInt d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_UnityActionInt_Event target = new GameLogic_UnityActionInt_Event(func, self);
			GameLogic.UnityActionInt d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_UnityActionInt(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.UnityActionInt), L, pos);
	}

	void Push_GameLogic_UnityActionInt(IntPtr L, GameLogic.UnityActionInt o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_UnityActionFloat_Event : LuaDelegate
	{
		public GameLogic_UnityActionFloat_Event(LuaFunction func) : base(func) { }
		public GameLogic_UnityActionFloat_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.UnityActionFloat GameLogic_UnityActionFloat(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.UnityActionFloat fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_UnityActionFloat_Event target = new GameLogic_UnityActionFloat_Event(func);
			GameLogic.UnityActionFloat d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_UnityActionFloat_Event target = new GameLogic_UnityActionFloat_Event(func, self);
			GameLogic.UnityActionFloat d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_UnityActionFloat(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.UnityActionFloat), L, pos);
	}

	void Push_GameLogic_UnityActionFloat(IntPtr L, GameLogic.UnityActionFloat o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_UnityActionString_Event : LuaDelegate
	{
		public GameLogic_UnityActionString_Event(LuaFunction func) : base(func) { }
		public GameLogic_UnityActionString_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.UnityActionString GameLogic_UnityActionString(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.UnityActionString fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_UnityActionString_Event target = new GameLogic_UnityActionString_Event(func);
			GameLogic.UnityActionString d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_UnityActionString_Event target = new GameLogic_UnityActionString_Event(func, self);
			GameLogic.UnityActionString d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_UnityActionString(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.UnityActionString), L, pos);
	}

	void Push_GameLogic_UnityActionString(IntPtr L, GameLogic.UnityActionString o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_UnityActionBool_Event : LuaDelegate
	{
		public GameLogic_UnityActionBool_Event(LuaFunction func) : base(func) { }
		public GameLogic_UnityActionBool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.UnityActionBool GameLogic_UnityActionBool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.UnityActionBool fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_UnityActionBool_Event target = new GameLogic_UnityActionBool_Event(func);
			GameLogic.UnityActionBool d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_UnityActionBool_Event target = new GameLogic_UnityActionBool_Event(func, self);
			GameLogic.UnityActionBool d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_UnityActionBool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.UnityActionBool), L, pos);
	}

	void Push_GameLogic_UnityActionBool(IntPtr L, GameLogic.UnityActionBool o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_ColliderEventDelegate_Event : LuaDelegate
	{
		public GameLogic_ColliderEventDelegate_Event(LuaFunction func) : base(func) { }
		public GameLogic_ColliderEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Collider param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Collider param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.ColliderEventDelegate GameLogic_ColliderEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.ColliderEventDelegate fn = delegate(UnityEngine.Collider param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_ColliderEventDelegate_Event target = new GameLogic_ColliderEventDelegate_Event(func);
			GameLogic.ColliderEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_ColliderEventDelegate_Event target = new GameLogic_ColliderEventDelegate_Event(func, self);
			GameLogic.ColliderEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_ColliderEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.ColliderEventDelegate), L, pos);
	}

	void Push_GameLogic_ColliderEventDelegate(IntPtr L, GameLogic.ColliderEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_PointerEventDelegate_Event : LuaDelegate
	{
		public GameLogic_PointerEventDelegate_Event(LuaFunction func) : base(func) { }
		public GameLogic_PointerEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.EventSystems.PointerEventData param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.EventSystems.PointerEventData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.PointerEventDelegate GameLogic_PointerEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.PointerEventDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.EventSystems.PointerEventData param1) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_PointerEventDelegate_Event target = new GameLogic_PointerEventDelegate_Event(func);
			GameLogic.PointerEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_PointerEventDelegate_Event target = new GameLogic_PointerEventDelegate_Event(func, self);
			GameLogic.PointerEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_PointerEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.PointerEventDelegate), L, pos);
	}

	void Push_GameLogic_PointerEventDelegate(IntPtr L, GameLogic.PointerEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_BaseEventDelegate_Event : LuaDelegate
	{
		public GameLogic_BaseEventDelegate_Event(LuaFunction func) : base(func) { }
		public GameLogic_BaseEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.EventSystems.BaseEventData param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.EventSystems.BaseEventData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.BaseEventDelegate GameLogic_BaseEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.BaseEventDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.EventSystems.BaseEventData param1) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_BaseEventDelegate_Event target = new GameLogic_BaseEventDelegate_Event(func);
			GameLogic.BaseEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_BaseEventDelegate_Event target = new GameLogic_BaseEventDelegate_Event(func, self);
			GameLogic.BaseEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_BaseEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.BaseEventDelegate), L, pos);
	}

	void Push_GameLogic_BaseEventDelegate(IntPtr L, GameLogic.BaseEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_AxisEventDelegate_Event : LuaDelegate
	{
		public GameLogic_AxisEventDelegate_Event(LuaFunction func) : base(func) { }
		public GameLogic_AxisEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.EventSystems.AxisEventData param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.EventSystems.AxisEventData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.AxisEventDelegate GameLogic_AxisEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.AxisEventDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.EventSystems.AxisEventData param1) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_AxisEventDelegate_Event target = new GameLogic_AxisEventDelegate_Event(func);
			GameLogic.AxisEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_AxisEventDelegate_Event target = new GameLogic_AxisEventDelegate_Event(func, self);
			GameLogic.AxisEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_AxisEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.AxisEventDelegate), L, pos);
	}

	void Push_GameLogic_AxisEventDelegate(IntPtr L, GameLogic.AxisEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class GameLogic_GameEventHandler_Event : LuaDelegate
	{
		public GameLogic_GameEventHandler_Event(LuaFunction func) : base(func) { }
		public GameLogic_GameEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object[] param0)
		{
			func.BeginPCall();

			for (int i = 0; i < param0.Length; i++)
			{
				func.Push(param0[i]);
			}

			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object[] param0)
		{
			func.BeginPCall();
			func.Push(self);

			for (int i = 0; i < param0.Length; i++)
			{
				func.Push(param0[i]);
			}

			func.PCall();
			func.EndPCall();
		}
	}

	public GameLogic.GameEventHandler GameLogic_GameEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GameLogic.GameEventHandler fn = delegate(object[] param0) { };
			return fn;
		}

		if(!flag)
		{
			GameLogic_GameEventHandler_Event target = new GameLogic_GameEventHandler_Event(func);
			GameLogic.GameEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GameLogic_GameEventHandler_Event target = new GameLogic_GameEventHandler_Event(func, self);
			GameLogic.GameEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GameLogic_GameEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(GameLogic.GameEventHandler), L, pos);
	}

	void Push_GameLogic_GameEventHandler(IntPtr L, GameLogic.GameEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<float> DG_Tweening_Core_DOGetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func);
			DG.Tweening.Core.DOGetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func, self);
			DG.Tweening.Core.DOGetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<float>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_float(IntPtr L, DG.Tweening.Core.DOGetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<float> DG_Tweening_Core_DOSetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func);
			DG.Tweening.Core.DOSetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func, self);
			DG.Tweening.Core.DOSetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<float>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_float(IntPtr L, DG.Tweening.Core.DOSetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public double Call()
		{
			func.BeginPCall();
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public double CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<double> DG_Tweening_Core_DOGetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<double> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func);
			DG.Tweening.Core.DOGetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func, self);
			DG.Tweening.Core.DOGetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<double>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_double(IntPtr L, DG.Tweening.Core.DOGetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(double param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(double param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<double> DG_Tweening_Core_DOSetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<double> fn = delegate(double param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func);
			DG.Tweening.Core.DOSetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func, self);
			DG.Tweening.Core.DOSetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<double>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_double(IntPtr L, DG.Tweening.Core.DOSetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<int> DG_Tweening_Core_DOGetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func);
			DG.Tweening.Core.DOGetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func, self);
			DG.Tweening.Core.DOGetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<int>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_int(IntPtr L, DG.Tweening.Core.DOGetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<int> DG_Tweening_Core_DOSetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func);
			DG.Tweening.Core.DOSetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func, self);
			DG.Tweening.Core.DOSetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<int>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_int(IntPtr L, DG.Tweening.Core.DOSetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public uint Call()
		{
			func.BeginPCall();
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public uint CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<uint> DG_Tweening_Core_DOGetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<uint> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func);
			DG.Tweening.Core.DOGetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func, self);
			DG.Tweening.Core.DOGetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<uint>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_uint(IntPtr L, DG.Tweening.Core.DOGetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(uint param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(uint param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<uint> DG_Tweening_Core_DOSetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<uint> fn = delegate(uint param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func);
			DG.Tweening.Core.DOSetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func, self);
			DG.Tweening.Core.DOSetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<uint>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_uint(IntPtr L, DG.Tweening.Core.DOSetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public long Call()
		{
			func.BeginPCall();
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}

		public long CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<long> DG_Tweening_Core_DOGetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<long> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func);
			DG.Tweening.Core.DOGetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func, self);
			DG.Tweening.Core.DOGetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<long>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_long(IntPtr L, DG.Tweening.Core.DOGetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(long param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(long param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<long> DG_Tweening_Core_DOSetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<long> fn = delegate(long param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func);
			DG.Tweening.Core.DOSetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func, self);
			DG.Tweening.Core.DOSetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<long>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_long(IntPtr L, DG.Tweening.Core.DOSetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public ulong Call()
		{
			func.BeginPCall();
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}

		public ulong CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<ulong> DG_Tweening_Core_DOGetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<ulong> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func);
			DG.Tweening.Core.DOGetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func, self);
			DG.Tweening.Core.DOGetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<ulong>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_ulong(IntPtr L, DG.Tweening.Core.DOGetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ulong param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ulong param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<ulong> DG_Tweening_Core_DOSetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<ulong> fn = delegate(ulong param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func);
			DG.Tweening.Core.DOSetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func, self);
			DG.Tweening.Core.DOSetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<ulong>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_ulong(IntPtr L, DG.Tweening.Core.DOSetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<string> DG_Tweening_Core_DOGetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func);
			DG.Tweening.Core.DOGetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func, self);
			DG.Tweening.Core.DOGetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<string>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_string(IntPtr L, DG.Tweening.Core.DOGetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<string> DG_Tweening_Core_DOSetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func);
			DG.Tweening.Core.DOSetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func, self);
			DG.Tweening.Core.DOSetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<string>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_string(IntPtr L, DG.Tweening.Core.DOSetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector2 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector2 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector2> DG_Tweening_Core_DOGetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> fn = delegate() { return default(UnityEngine.Vector2); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector2> DG_Tweening_Core_DOSetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector3> DG_Tweening_Core_DOGetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector3> DG_Tweening_Core_DOSetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector4 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector4 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector4> DG_Tweening_Core_DOGetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> fn = delegate() { return default(UnityEngine.Vector4); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector4> DG_Tweening_Core_DOSetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> fn = delegate(UnityEngine.Vector4 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Quaternion Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Quaternion CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> fn = delegate() { return default(UnityEngine.Quaternion); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> fn = delegate(UnityEngine.Quaternion param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Color Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Color CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Color> DG_Tweening_Core_DOGetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Color> fn = delegate() { return default(UnityEngine.Color); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Color> DG_Tweening_Core_DOSetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Rect Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Rect CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Rect> DG_Tweening_Core_DOGetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> fn = delegate() { return default(UnityEngine.Rect); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Rect> DG_Tweening_Core_DOSetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> fn = delegate(UnityEngine.Rect param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.RectOffset Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.RectOffset CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> fn = delegate(UnityEngine.RectOffset param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_MemoryUsageChangedCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_MemoryUsageChangedCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_MemoryUsageChangedCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ref UnityEngine.ApplicationMemoryUsageChange param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ref UnityEngine.ApplicationMemoryUsageChange param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	//public UnityEngine.Application.MemoryUsageChangedCallback UnityEngine_Application_MemoryUsageChangedCallback(LuaFunction func, LuaTable self, bool flag)
	//{
	//	//if (func == null)
	//	//{
	//	//	UnityEngine.Application.MemoryUsageChangedCallback fn = delegate(ref UnityEngine.ApplicationMemoryUsageChange param0) { };
	//	//	return fn;
	//	//}

	//	//if(!flag)
	//	//{
	//	//	UnityEngine_Application_MemoryUsageChangedCallback_Event target = new UnityEngine_Application_MemoryUsageChangedCallback_Event(func);
	//	//	UnityEngine.Application.MemoryUsageChangedCallback d = target.Call;
	//	//	target.method = d.Method;
	//	//	return d;
	//	//}
	//	//else
	//	//{
	//	//	UnityEngine_Application_MemoryUsageChangedCallback_Event target = new UnityEngine_Application_MemoryUsageChangedCallback_Event(func, self);
	//	//	UnityEngine.Application.MemoryUsageChangedCallback d = target.CallWithSelf;
	//	//	target.method = d.Method;
	//	//	return d;
	//	//}
	//}

	bool Check_UnityEngine_Application_MemoryUsageChangedCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.MemoryUsageChangedCallback), L, pos);
	}

	void Push_UnityEngine_Application_MemoryUsageChangedCallback(IntPtr L, UnityEngine.Application.MemoryUsageChangedCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string>), L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event : LuaDelegate
	{
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> fn = delegate(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func, self);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>), L, pos);
	}

	void Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Physics_ContactEventDelegate_Event : LuaDelegate
	{
		public UnityEngine_Physics_ContactEventDelegate_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Physics_ContactEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ContactPairHeader>.ReadOnly param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ContactPairHeader>.ReadOnly param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Physics.ContactEventDelegate UnityEngine_Physics_ContactEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Physics.ContactEventDelegate fn = delegate(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ContactPairHeader>.ReadOnly param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Physics_ContactEventDelegate_Event target = new UnityEngine_Physics_ContactEventDelegate_Event(func);
			UnityEngine.Physics.ContactEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Physics_ContactEventDelegate_Event target = new UnityEngine_Physics_ContactEventDelegate_Event(func, self);
			UnityEngine.Physics.ContactEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Physics_ContactEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Physics.ContactEventDelegate), L, pos);
	}

	void Push_UnityEngine_Physics_ContactEventDelegate(IntPtr L, UnityEngine.Physics.ContactEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_int_Event : LuaDelegate
	{
		public System_Action_int_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int,int> System_Action_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int,int> fn = delegate(int param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_int_Event target = new System_Action_int_int_Event(func);
			System.Action<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_int_Event target = new System_Action_int_int_Event(func, self);
			System.Action<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int,int>), L, pos);
	}

	void Push_System_Action_int_int(IntPtr L, System.Action<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_string_Event : LuaDelegate
	{
		public System_Action_int_string_Event(LuaFunction func) : base(func) { }
		public System_Action_int_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, string param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int,string> System_Action_int_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int,string> fn = delegate(int param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_string_Event target = new System_Action_int_string_Event(func);
			System.Action<int,string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_string_Event target = new System_Action_int_string_Event(func, self);
			System.Action<int,string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int,string>), L, pos);
	}

	void Push_System_Action_int_string(IntPtr L, System.Action<int,string> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Canvas_WillRenderCanvases_Event : LuaDelegate
	{
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Canvas.WillRenderCanvases UnityEngine_Canvas_WillRenderCanvases(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Canvas.WillRenderCanvases fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func);
			UnityEngine.Canvas.WillRenderCanvases d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func, self);
			UnityEngine.Canvas.WillRenderCanvases d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Canvas.WillRenderCanvases), L, pos);
	}

	void Push_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, UnityEngine.Canvas.WillRenderCanvases o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func) : base(func) { }
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public UnityEngine.UI.InputField.OnValidateInput UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.UI.InputField.OnValidateInput fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func);
			UnityEngine.UI.InputField.OnValidateInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func, self);
			UnityEngine.UI.InputField.OnValidateInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.UI.InputField.OnValidateInput), L, pos);
	}

	void Push_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, UnityEngine.UI.InputField.OnValidateInput o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, UnityEngine.Object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, UnityEngine.Object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<string,UnityEngine.Object> UnityEngine_Events_UnityAction_string_UnityEngine_Object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<string,UnityEngine.Object> fn = delegate(string param0, UnityEngine.Object param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event target = new UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event(func);
			UnityEngine.Events.UnityAction<string,UnityEngine.Object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event target = new UnityEngine_Events_UnityAction_string_UnityEngine_Object_Event(func, self);
			UnityEngine.Events.UnityAction<string,UnityEngine.Object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_string_UnityEngine_Object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<string,UnityEngine.Object>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_string_UnityEngine_Object(IntPtr L, UnityEngine.Events.UnityAction<string,UnityEngine.Object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_IAPResult_Event : LuaDelegate
	{
		public System_Action_IAPResult_Event(LuaFunction func) : base(func) { }
		public System_Action_IAPResult_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(IAPResult param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(IAPResult param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<IAPResult> System_Action_IAPResult(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<IAPResult> fn = delegate(IAPResult param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_IAPResult_Event target = new System_Action_IAPResult_Event(func);
			System.Action<IAPResult> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_IAPResult_Event target = new System_Action_IAPResult_Event(func, self);
			System.Action<IAPResult> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_IAPResult(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<IAPResult>), L, pos);
	}

	void Push_System_Action_IAPResult(IntPtr L, System.Action<IAPResult> o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnCompleteAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnCompleteAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnCompleteAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnCompleteAction SuperTextMesh_OnCompleteAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnCompleteAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnCompleteAction_Event target = new SuperTextMesh_OnCompleteAction_Event(func);
			SuperTextMesh.OnCompleteAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnCompleteAction_Event target = new SuperTextMesh_OnCompleteAction_Event(func, self);
			SuperTextMesh.OnCompleteAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnCompleteAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnCompleteAction), L, pos);
	}

	void Push_SuperTextMesh_OnCompleteAction(IntPtr L, SuperTextMesh.OnCompleteAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnUndrawnAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnUndrawnAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnUndrawnAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnUndrawnAction SuperTextMesh_OnUndrawnAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnUndrawnAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnUndrawnAction_Event target = new SuperTextMesh_OnUndrawnAction_Event(func);
			SuperTextMesh.OnUndrawnAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnUndrawnAction_Event target = new SuperTextMesh_OnUndrawnAction_Event(func, self);
			SuperTextMesh.OnUndrawnAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnUndrawnAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnUndrawnAction), L, pos);
	}

	void Push_SuperTextMesh_OnUndrawnAction(IntPtr L, SuperTextMesh.OnUndrawnAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnRebuildAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnRebuildAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnRebuildAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnRebuildAction SuperTextMesh_OnRebuildAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnRebuildAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnRebuildAction_Event target = new SuperTextMesh_OnRebuildAction_Event(func);
			SuperTextMesh.OnRebuildAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnRebuildAction_Event target = new SuperTextMesh_OnRebuildAction_Event(func, self);
			SuperTextMesh.OnRebuildAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnRebuildAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnRebuildAction), L, pos);
	}

	void Push_SuperTextMesh_OnRebuildAction(IntPtr L, SuperTextMesh.OnRebuildAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnPrintAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnPrintAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnPrintAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnPrintAction SuperTextMesh_OnPrintAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnPrintAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnPrintAction_Event target = new SuperTextMesh_OnPrintAction_Event(func);
			SuperTextMesh.OnPrintAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnPrintAction_Event target = new SuperTextMesh_OnPrintAction_Event(func, self);
			SuperTextMesh.OnPrintAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnPrintAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnPrintAction), L, pos);
	}

	void Push_SuperTextMesh_OnPrintAction(IntPtr L, SuperTextMesh.OnPrintAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnCustomAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnCustomAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnCustomAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, STMTextInfo param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, STMTextInfo param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnCustomAction SuperTextMesh_OnCustomAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnCustomAction fn = delegate(string param0, STMTextInfo param1) { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnCustomAction_Event target = new SuperTextMesh_OnCustomAction_Event(func);
			SuperTextMesh.OnCustomAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnCustomAction_Event target = new SuperTextMesh_OnCustomAction_Event(func, self);
			SuperTextMesh.OnCustomAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnCustomAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnCustomAction), L, pos);
	}

	void Push_SuperTextMesh_OnCustomAction(IntPtr L, SuperTextMesh.OnCustomAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnVertexModAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnVertexModAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnVertexModAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3[] param0, UnityEngine.Vector3[] param1, UnityEngine.Vector3[] param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3[] param0, UnityEngine.Vector3[] param1, UnityEngine.Vector3[] param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnVertexModAction SuperTextMesh_OnVertexModAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnVertexModAction fn = delegate(UnityEngine.Vector3[] param0, UnityEngine.Vector3[] param1, UnityEngine.Vector3[] param2) { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnVertexModAction_Event target = new SuperTextMesh_OnVertexModAction_Event(func);
			SuperTextMesh.OnVertexModAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnVertexModAction_Event target = new SuperTextMesh_OnVertexModAction_Event(func, self);
			SuperTextMesh.OnVertexModAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnVertexModAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnVertexModAction), L, pos);
	}

	void Push_SuperTextMesh_OnVertexModAction(IntPtr L, SuperTextMesh.OnVertexModAction o)
	{
		ToLua.Push(L, o);
	}

	class SuperTextMesh_OnPreParseAction_Event : LuaDelegate
	{
		public SuperTextMesh_OnPreParseAction_Event(LuaFunction func) : base(func) { }
		public SuperTextMesh_OnPreParseAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(STMTextContainer param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(STMTextContainer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SuperTextMesh.OnPreParseAction SuperTextMesh_OnPreParseAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SuperTextMesh.OnPreParseAction fn = delegate(STMTextContainer param0) { };
			return fn;
		}

		if(!flag)
		{
			SuperTextMesh_OnPreParseAction_Event target = new SuperTextMesh_OnPreParseAction_Event(func);
			SuperTextMesh.OnPreParseAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SuperTextMesh_OnPreParseAction_Event target = new SuperTextMesh_OnPreParseAction_Event(func, self);
			SuperTextMesh.OnPreParseAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SuperTextMesh_OnPreParseAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SuperTextMesh.OnPreParseAction), L, pos);
	}

	void Push_SuperTextMesh_OnPreParseAction(IntPtr L, SuperTextMesh.OnPreParseAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_LoginData_Event : LuaDelegate
	{
		public System_Action_LoginData_Event(LuaFunction func) : base(func) { }
		public System_Action_LoginData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(LoginData param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(LoginData param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<LoginData> System_Action_LoginData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<LoginData> fn = delegate(LoginData param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_LoginData_Event target = new System_Action_LoginData_Event(func);
			System.Action<LoginData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_LoginData_Event target = new System_Action_LoginData_Event(func, self);
			System.Action<LoginData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_LoginData(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<LoginData>), L, pos);
	}

	void Push_System_Action_LoginData(IntPtr L, System.Action<LoginData> o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_InitLaunchAction_Event : LuaDelegate
	{
		public SDK_SDKManager_InitLaunchAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_InitLaunchAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.InitLaunchAction SDK_SDKManager_InitLaunchAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.InitLaunchAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_InitLaunchAction_Event target = new SDK_SDKManager_InitLaunchAction_Event(func);
			SDK.SDKManager.InitLaunchAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_InitLaunchAction_Event target = new SDK_SDKManager_InitLaunchAction_Event(func, self);
			SDK.SDKManager.InitLaunchAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_InitLaunchAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.InitLaunchAction), L, pos);
	}

	void Push_SDK_SDKManager_InitLaunchAction(IntPtr L, SDK.SDKManager.InitLaunchAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_RegisterAction_Event : LuaDelegate
	{
		public SDK_SDKManager_RegisterAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_RegisterAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.RegisterAction SDK_SDKManager_RegisterAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.RegisterAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_RegisterAction_Event target = new SDK_SDKManager_RegisterAction_Event(func);
			SDK.SDKManager.RegisterAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_RegisterAction_Event target = new SDK_SDKManager_RegisterAction_Event(func, self);
			SDK.SDKManager.RegisterAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_RegisterAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.RegisterAction), L, pos);
	}

	void Push_SDK_SDKManager_RegisterAction(IntPtr L, SDK.SDKManager.RegisterAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_LoginAction_Event : LuaDelegate
	{
		public SDK_SDKManager_LoginAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_LoginAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.LoginAction SDK_SDKManager_LoginAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.LoginAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_LoginAction_Event target = new SDK_SDKManager_LoginAction_Event(func);
			SDK.SDKManager.LoginAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_LoginAction_Event target = new SDK_SDKManager_LoginAction_Event(func, self);
			SDK.SDKManager.LoginAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_LoginAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.LoginAction), L, pos);
	}

	void Push_SDK_SDKManager_LoginAction(IntPtr L, SDK.SDKManager.LoginAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_PayAction_Event : LuaDelegate
	{
		public SDK_SDKManager_PayAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_PayAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.PayAction SDK_SDKManager_PayAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.PayAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_PayAction_Event target = new SDK_SDKManager_PayAction_Event(func);
			SDK.SDKManager.PayAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_PayAction_Event target = new SDK_SDKManager_PayAction_Event(func, self);
			SDK.SDKManager.PayAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_PayAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.PayAction), L, pos);
	}

	void Push_SDK_SDKManager_PayAction(IntPtr L, SDK.SDKManager.PayAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_SwitchAccountAction_Event : LuaDelegate
	{
		public SDK_SDKManager_SwitchAccountAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_SwitchAccountAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.SwitchAccountAction SDK_SDKManager_SwitchAccountAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.SwitchAccountAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_SwitchAccountAction_Event target = new SDK_SDKManager_SwitchAccountAction_Event(func);
			SDK.SDKManager.SwitchAccountAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_SwitchAccountAction_Event target = new SDK_SDKManager_SwitchAccountAction_Event(func, self);
			SDK.SDKManager.SwitchAccountAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_SwitchAccountAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.SwitchAccountAction), L, pos);
	}

	void Push_SDK_SDKManager_SwitchAccountAction(IntPtr L, SDK.SDKManager.SwitchAccountAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_LogoutAction_Event : LuaDelegate
	{
		public SDK_SDKManager_LogoutAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_LogoutAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.LogoutAction SDK_SDKManager_LogoutAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.LogoutAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_LogoutAction_Event target = new SDK_SDKManager_LogoutAction_Event(func);
			SDK.SDKManager.LogoutAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_LogoutAction_Event target = new SDK_SDKManager_LogoutAction_Event(func, self);
			SDK.SDKManager.LogoutAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_LogoutAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.LogoutAction), L, pos);
	}

	void Push_SDK_SDKManager_LogoutAction(IntPtr L, SDK.SDKManager.LogoutAction o)
	{
		ToLua.Push(L, o);
	}

	class SDK_SDKManager_MessageAction_Event : LuaDelegate
	{
		public SDK_SDKManager_MessageAction_Event(LuaFunction func) : base(func) { }
		public SDK_SDKManager_MessageAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public SDK.SDKManager.MessageAction SDK_SDKManager_MessageAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			SDK.SDKManager.MessageAction fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			SDK_SDKManager_MessageAction_Event target = new SDK_SDKManager_MessageAction_Event(func);
			SDK.SDKManager.MessageAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			SDK_SDKManager_MessageAction_Event target = new SDK_SDKManager_MessageAction_Event(func, self);
			SDK.SDKManager.MessageAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_SDK_SDKManager_MessageAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(SDK.SDKManager.MessageAction), L, pos);
	}

	void Push_SDK_SDKManager_MessageAction(IntPtr L, SDK.SDKManager.MessageAction o)
	{
		ToLua.Push(L, o);
	}

	class CallBack_UnityEngine_Vector3_Event : LuaDelegate
	{
		public CallBack_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public CallBack_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public CallBack<UnityEngine.Vector3> CallBack_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			CallBack<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			CallBack_UnityEngine_Vector3_Event target = new CallBack_UnityEngine_Vector3_Event(func);
			CallBack<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			CallBack_UnityEngine_Vector3_Event target = new CallBack_UnityEngine_Vector3_Event(func, self);
			CallBack<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_CallBack_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(CallBack<UnityEngine.Vector3>), L, pos);
	}

	void Push_CallBack_UnityEngine_Vector3(IntPtr L, CallBack<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class CallBack_Event : LuaDelegate
	{
		public CallBack_Event(LuaFunction func) : base(func) { }
		public CallBack_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public CallBack CallBack(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			CallBack fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			CallBack_Event target = new CallBack_Event(func);
			CallBack d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			CallBack_Event target = new CallBack_Event(func, self);
			CallBack d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_CallBack(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(CallBack), L, pos);
	}

	void Push_CallBack(IntPtr L, CallBack o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event : LuaDelegate
	{
		public System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0, ResUpdate.ResourcesUpdateState param1, object param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0, ResUpdate.ResourcesUpdateState param1, object param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool,ResUpdate.ResourcesUpdateState,object> System_Action_bool_ResUpdate_ResourcesUpdateState_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool,ResUpdate.ResourcesUpdateState,object> fn = delegate(bool param0, ResUpdate.ResourcesUpdateState param1, object param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event target = new System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event(func);
			System.Action<bool,ResUpdate.ResourcesUpdateState,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event target = new System_Action_bool_ResUpdate_ResourcesUpdateState_object_Event(func, self);
			System.Action<bool,ResUpdate.ResourcesUpdateState,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool_ResUpdate_ResourcesUpdateState_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool,ResUpdate.ResourcesUpdateState,object>), L, pos);
	}

	void Push_System_Action_bool_ResUpdate_ResourcesUpdateState_object(IntPtr L, System.Action<bool,ResUpdate.ResourcesUpdateState,object> o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonGraphic param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonGraphic param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate fn = delegate(Spine.Unity.SkeletonGraphic param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event(func);
			Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate_Event(func, self);
			Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonGraphic_SkeletonRendererDelegate(IntPtr L, Spine.Unity.SkeletonGraphic.SkeletonRendererDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_UpdateBonesDelegate_Event : LuaDelegate
	{
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.UpdateBonesDelegate Spine_Unity_UpdateBonesDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.UpdateBonesDelegate fn = delegate(Spine.Unity.ISkeletonAnimation param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func);
			Spine.Unity.UpdateBonesDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func, self);
			Spine.Unity.UpdateBonesDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_UpdateBonesDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.UpdateBonesDelegate), L, pos);
	}

	void Push_Spine_Unity_UpdateBonesDelegate(IntPtr L, Spine.Unity.UpdateBonesDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_MeshGeneratorDelegate_Event : LuaDelegate
	{
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.MeshGeneratorDelegate Spine_Unity_MeshGeneratorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.MeshGeneratorDelegate fn = delegate(Spine.Unity.MeshGeneratorBuffers param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func);
			Spine.Unity.MeshGeneratorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func, self);
			Spine.Unity.MeshGeneratorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_MeshGeneratorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.MeshGeneratorDelegate), L, pos);
	}

	void Push_Spine_Unity_MeshGeneratorDelegate(IntPtr L, Spine.Unity.MeshGeneratorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_InstructionDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.InstructionDelegate Spine_Unity_SkeletonRenderer_InstructionDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.InstructionDelegate fn = delegate(Spine.Unity.SkeletonRendererInstruction param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.InstructionDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate fn = delegate(Spine.Unity.SkeletonRenderer param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_string_bool_Event : LuaDelegate
	{
		public System_Func_string_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_string_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<string,bool> System_Func_string_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<string,bool> fn = delegate(string param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_string_bool_Event target = new System_Func_string_bool_Event(func);
			System.Func<string,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_string_bool_Event target = new System_Func_string_bool_Event(func, self);
			System.Func<string,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_string_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<string,bool>), L, pos);
	}

	void Push_System_Func_string_bool(IntPtr L, System.Func<string,bool> o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryDelegate Spine_AnimationState_TrackEntryDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryDelegate fn = delegate(Spine.TrackEntry param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func);
			Spine.AnimationState.TrackEntryDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryDelegate(IntPtr L, Spine.AnimationState.TrackEntryDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryEventDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryEventDelegate Spine_AnimationState_TrackEntryEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryEventDelegate fn = delegate(Spine.TrackEntry param0, Spine.Event param1) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func);
			Spine.AnimationState.TrackEntryEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryEventDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, Spine.AnimationState.TrackEntryEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_UnityEngine_UI_ILayoutElement_float_Event : LuaDelegate
	{
		public System_Func_UnityEngine_UI_ILayoutElement_float_Event(LuaFunction func) : base(func) { }
		public System_Func_UnityEngine_UI_ILayoutElement_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call(UnityEngine.UI.ILayoutElement param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf(UnityEngine.UI.ILayoutElement param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<UnityEngine.UI.ILayoutElement,float> System_Func_UnityEngine_UI_ILayoutElement_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<UnityEngine.UI.ILayoutElement,float> fn = delegate(UnityEngine.UI.ILayoutElement param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_UnityEngine_UI_ILayoutElement_float_Event target = new System_Func_UnityEngine_UI_ILayoutElement_float_Event(func);
			System.Func<UnityEngine.UI.ILayoutElement,float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_UnityEngine_UI_ILayoutElement_float_Event target = new System_Func_UnityEngine_UI_ILayoutElement_float_Event(func, self);
			System.Func<UnityEngine.UI.ILayoutElement,float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_UnityEngine_UI_ILayoutElement_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<UnityEngine.UI.ILayoutElement,float>), L, pos);
	}

	void Push_System_Func_UnityEngine_UI_ILayoutElement_float(IntPtr L, System.Func<UnityEngine.UI.ILayoutElement,float> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_GameObject_Event : LuaDelegate
	{
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.GameObject> System_Action_UnityEngine_GameObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.GameObject> fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func);
			System.Action<UnityEngine.GameObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func, self);
			System.Action<UnityEngine.GameObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_GameObject(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.GameObject>), L, pos);
	}

	void Push_System_Action_UnityEngine_GameObject(IntPtr L, System.Action<UnityEngine.GameObject> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_RenderTexture_Event : LuaDelegate
	{
		public System_Action_UnityEngine_RenderTexture_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_RenderTexture_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RenderTexture param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RenderTexture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.RenderTexture> System_Action_UnityEngine_RenderTexture(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.RenderTexture> fn = delegate(UnityEngine.RenderTexture param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_RenderTexture_Event target = new System_Action_UnityEngine_RenderTexture_Event(func);
			System.Action<UnityEngine.RenderTexture> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_RenderTexture_Event target = new System_Action_UnityEngine_RenderTexture_Event(func, self);
			System.Action<UnityEngine.RenderTexture> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_RenderTexture(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.RenderTexture>), L, pos);
	}

	void Push_System_Action_UnityEngine_RenderTexture(IntPtr L, System.Action<UnityEngine.RenderTexture> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_EventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_EventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_EventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.EventHandler UnityEngine_Video_VideoPlayer_EventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.EventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_EventHandler_Event target = new UnityEngine_Video_VideoPlayer_EventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.EventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_EventHandler_Event target = new UnityEngine_Video_VideoPlayer_EventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.EventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_EventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Video.VideoPlayer.EventHandler), L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_EventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.EventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, string param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.ErrorEventHandler UnityEngine_Video_VideoPlayer_ErrorEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.ErrorEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event target = new UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.ErrorEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event target = new UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.ErrorEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_ErrorEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Video.VideoPlayer.ErrorEventHandler), L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_ErrorEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.ErrorEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_TimeEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, double param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, double param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.TimeEventHandler UnityEngine_Video_VideoPlayer_TimeEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.TimeEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, double param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_TimeEventHandler_Event target = new UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.TimeEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_TimeEventHandler_Event target = new UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.TimeEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_TimeEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Video.VideoPlayer.TimeEventHandler), L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_TimeEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.TimeEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, long param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, long param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.FrameReadyEventHandler UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, long param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event target = new UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event target = new UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Video.VideoPlayer.FrameReadyEventHandler), L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.FrameReadyEventHandler o)
	{
		ToLua.Push(L, o);
	}

}

