//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameLogic_GameManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameLogic.GameManager), typeof(GameCore.UnitySingleton<GameLogic.GameManager>));
		L.RegFunction("Restart", Restart);
		L.RegFunction("Reset", Reset);
		L.RegFunction("AddUpdateEvent", AddUpdateEvent);
		L.RegFunction("RemoveUpdateEvent", RemoveUpdateEvent);
		L.RegFunction("GetUid", GetUid);
		L.RegFunction("SetUid", SetUid);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			obj.Restart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			obj.Reset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUpdateEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.AddUpdateEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUpdateEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.RemoveUpdateEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			string o = obj.GetUid();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameLogic.GameManager obj = (GameLogic.GameManager)ToLua.CheckObject<GameLogic.GameManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetUid(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

