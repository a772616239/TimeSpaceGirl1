//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GoogleSignMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GoogleSignMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("LoginByPlatformType", LoginByPlatformType);
		L.RegFunction("OnRet", OnRet);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Inst", get_Inst, set_Inst);
		L.RegVar("CrtPlatformId", get_CrtPlatformId, set_CrtPlatformId);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoginByPlatformType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GoogleSignMgr obj = (GoogleSignMgr)ToLua.CheckObject<GoogleSignMgr>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Action<bool,string> arg1 = (System.Action<bool,string>)ToLua.CheckDelegate<System.Action<bool,string>>(L, 3);
			obj.LoginByPlatformType(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnRet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GoogleSignMgr obj = (GoogleSignMgr)ToLua.CheckObject<GoogleSignMgr>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.OnRet(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GoogleSignMgr.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CrtPlatformId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GoogleSignMgr obj = (GoogleSignMgr)o;
			int ret = obj.CrtPlatformId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CrtPlatformId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Inst(IntPtr L)
	{
		try
		{
			GoogleSignMgr arg0 = (GoogleSignMgr)ToLua.CheckObject<GoogleSignMgr>(L, 2);
			GoogleSignMgr.Inst = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CrtPlatformId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GoogleSignMgr obj = (GoogleSignMgr)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.CrtPlatformId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CrtPlatformId on a nil value");
		}
	}
}

