//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IAPManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IAPManager), typeof(GameCore.DontDestroyOnLoad));
		L.RegFunction("OnPurchaseFailed", OnPurchaseFailed);
		L.RegFunction("OnInitialized", OnInitialized);
		L.RegFunction("BuyItem1", BuyItem1);
		L.RegFunction("BuyItem", BuyItem);
		L.RegFunction("OnInitializeFailed", OnInitializeFailed);
		L.RegFunction("ProcessPurchase", ProcessPurchase);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("buycoin_base", get_buycoin_base, null);
		L.RegVar("Inst", get_Inst, set_Inst);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPurchaseFailed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.Product arg0 = (UnityEngine.Purchasing.Product)ToLua.CheckObject<UnityEngine.Purchasing.Product>(L, 2);
			UnityEngine.Purchasing.PurchaseFailureReason arg1 = (UnityEngine.Purchasing.PurchaseFailureReason)ToLua.CheckObject(L, 3, typeof(UnityEngine.Purchasing.PurchaseFailureReason));
			obj.OnPurchaseFailed(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitialized(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.IStoreController arg0 = (UnityEngine.Purchasing.IStoreController)ToLua.CheckObject<UnityEngine.Purchasing.IStoreController>(L, 2);
			UnityEngine.Purchasing.IExtensionProvider arg1 = (UnityEngine.Purchasing.IExtensionProvider)ToLua.CheckObject<UnityEngine.Purchasing.IExtensionProvider>(L, 3);
			obj.OnInitialized(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuyItem1(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			System.Action<IAPResult> arg2 = (System.Action<IAPResult>)ToLua.CheckDelegate<System.Action<IAPResult>>(L, 4);
			obj.BuyItem1(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuyItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.BuyItem(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitializeFailed(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
				UnityEngine.Purchasing.InitializationFailureReason arg0 = (UnityEngine.Purchasing.InitializationFailureReason)ToLua.CheckObject(L, 2, typeof(UnityEngine.Purchasing.InitializationFailureReason));
				obj.OnInitializeFailed(arg0);
				return 0;
			}
			else if (count == 3)
			{
				IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
				UnityEngine.Purchasing.InitializationFailureReason arg0 = (UnityEngine.Purchasing.InitializationFailureReason)ToLua.CheckObject(L, 2, typeof(UnityEngine.Purchasing.InitializationFailureReason));
				string arg1 = ToLua.CheckString(L, 3);
				obj.OnInitializeFailed(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: IAPManager.OnInitializeFailed");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ProcessPurchase(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.PurchaseEventArgs arg0 = (UnityEngine.Purchasing.PurchaseEventArgs)ToLua.CheckObject<UnityEngine.Purchasing.PurchaseEventArgs>(L, 2);
			UnityEngine.Purchasing.PurchaseProcessingResult o = obj.ProcessPurchase(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buycoin_base(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, IAPManager.buycoin_base);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, IAPManager.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Inst(IntPtr L)
	{
		try
		{
			IAPManager arg0 = (IAPManager)ToLua.CheckObject<IAPManager>(L, 2);
			IAPManager.Inst = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

