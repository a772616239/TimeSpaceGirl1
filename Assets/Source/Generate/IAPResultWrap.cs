//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IAPResultWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IAPResult), typeof(System.Object));
		L.RegFunction("ConvertToPurchasedInfo", ConvertToPurchasedInfo);
		L.RegFunction("New", _CreateIAPResult);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("IsSucc", get_IsSucc, set_IsSucc);
		L.RegVar("product", get_product, set_product);
		L.RegVar("failureReason", get_failureReason, set_failureReason);
		L.RegVar("failureDescription", get_failureDescription, set_failureDescription);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateIAPResult(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				IAPResult obj = new IAPResult();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IAPResult.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConvertToPurchasedInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPResult obj = (IAPResult)ToLua.CheckObject<IAPResult>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			PurchasedInfo o = obj.ConvertToPurchasedInfo(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsSucc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			bool ret = obj.IsSucc;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsSucc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_product(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.Product ret = obj.product;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index product on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_failureReason(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.PurchaseFailureReason ret = obj.failureReason;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index failureReason on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_failureDescription(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.PurchaseFailureDescription ret = obj.failureDescription;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index failureDescription on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsSucc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsSucc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsSucc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_product(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.Product arg0 = (UnityEngine.Purchasing.Product)ToLua.CheckObject<UnityEngine.Purchasing.Product>(L, 2);
			obj.product = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index product on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_failureReason(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.PurchaseFailureReason arg0 = (UnityEngine.Purchasing.PurchaseFailureReason)ToLua.CheckObject(L, 2, typeof(UnityEngine.Purchasing.PurchaseFailureReason));
			obj.failureReason = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index failureReason on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_failureDescription(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPResult obj = (IAPResult)o;
			UnityEngine.Purchasing.PurchaseFailureDescription arg0 = (UnityEngine.Purchasing.PurchaseFailureDescription)ToLua.CheckObject<UnityEngine.Purchasing.PurchaseFailureDescription>(L, 2);
			obj.failureDescription = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index failureDescription on a nil value");
		}
	}
}

