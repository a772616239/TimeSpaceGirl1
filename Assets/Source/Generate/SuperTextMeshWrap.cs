//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SuperTextMeshWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SuperTextMesh), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RemoveEmoji", RemoveEmoji);
		L.RegFunction("OnValidate", OnValidate);
		//L.RegFunction("HideInspectorStuff", HideInspectorStuff);
		L.RegFunction("InitializeFont", InitializeFont);
		L.RegFunction("RebuildAll", RebuildAll);
		L.RegFunction("Rebuild", Rebuild);
		L.RegFunction("Read", Read);
		L.RegFunction("Unread", Unread);
		L.RegFunction("Undraw", Undraw);
		L.RegFunction("UnDraw", UnDraw);
		L.RegFunction("UnRead", UnRead);
		L.RegFunction("SpeedRead", SpeedRead);
		L.RegFunction("SkipToEnd", SkipToEnd);
		L.RegFunction("RegularRead", RegularRead);
		L.RegFunction("ShowAllText", ShowAllText);
		L.RegFunction("Append", Append);
		L.RegFunction("Continue", Continue);
		L.RegFunction("UndoContinue", UndoContinue);
		L.RegFunction("PlaySound", PlaySound);
		L.RegFunction("SetMesh", SetMesh);
		L.RegFunction("ClearMaterials", ClearMaterials);
		L.RegFunction("CalculateLayoutInputHorizontal", CalculateLayoutInputHorizontal);
		L.RegFunction("CalculateLayoutInputVertical", CalculateLayoutInputVertical);
		L.RegFunction("RecalculateMasking", RecalculateMasking);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("showTextFoldout", get_showTextFoldout, set_showTextFoldout);
		L.RegVar("showAppearanceFoldout", get_showAppearanceFoldout, set_showAppearanceFoldout);
		L.RegVar("showMaterialFoldout", get_showMaterialFoldout, set_showMaterialFoldout);
		L.RegVar("showPositionFoldout", get_showPositionFoldout, set_showPositionFoldout);
		L.RegVar("showTimingFoldout", get_showTimingFoldout, set_showTimingFoldout);
		L.RegVar("showFunctionalityFoldout", get_showFunctionalityFoldout, set_showFunctionalityFoldout);
		L.RegVar("showAudioFoldout", get_showAudioFoldout, set_showAudioFoldout);
		L.RegVar("showEventFoldout", get_showEventFoldout, set_showEventFoldout);
		L.RegVar("showBetaFoldout", get_showBetaFoldout, set_showBetaFoldout);
		L.RegVar("info", get_info, set_info);
		L.RegVar("lineHeights", get_lineHeights, set_lineHeights);
		L.RegVar("_text", get__text, set__text);
		L.RegVar("drawText", get_drawText, set_drawText);
		L.RegVar("hyphenedText", get_hyphenedText, set_hyphenedText);
		L.RegVar("font", get_font, set_font);
		L.RegVar("_color32", get__color32, set__color32);
		L.RegVar("_color", get__color, set__color);
		L.RegVar("forceAnimation", get_forceAnimation, set_forceAnimation);
		L.RegVar("richText", get_richText, set_richText);
		L.RegVar("readDelay", get_readDelay, set_readDelay);
		L.RegVar("speedReadScale", get_speedReadScale, set_speedReadScale);
		L.RegVar("ignoreTimeScale", get_ignoreTimeScale, set_ignoreTimeScale);
		L.RegVar("disableAnimatedText", get_disableAnimatedText, set_disableAnimatedText);
		L.RegVar("drawAnimName", get_drawAnimName, set_drawAnimName);
		L.RegVar("unreadDelay", get_unreadDelay, set_unreadDelay);
		L.RegVar("undrawOrder", get_undrawOrder, set_undrawOrder);
		L.RegVar("undrawAnimName", get_undrawAnimName, set_undrawAnimName);
		L.RegVar("audioSource", get_audioSource, set_audioSource);
		L.RegVar("audioClips", get_audioClips, set_audioClips);
		L.RegVar("stopPreviousSound", get_stopPreviousSound, set_stopPreviousSound);
		L.RegVar("pitchMode", get_pitchMode, set_pitchMode);
		L.RegVar("overridePitch", get_overridePitch, set_overridePitch);
		L.RegVar("minPitch", get_minPitch, set_minPitch);
		L.RegVar("maxPitch", get_maxPitch, set_maxPitch);
		L.RegVar("speedReadPitch", get_speedReadPitch, set_speedReadPitch);
		L.RegVar("perlinPitchMulti", get_perlinPitchMulti, set_perlinPitchMulti);
		L.RegVar("reading", get_reading, set_reading);
		L.RegVar("unreading", get_unreading, set_unreading);
		L.RegVar("size", get_size, set_size);
		L.RegVar("minSize", get_minSize, set_minSize);
		L.RegVar("bestFitMulti", get_bestFitMulti, set_bestFitMulti);
		L.RegVar("quality", get_quality, set_quality);
		L.RegVar("filterMode", get_filterMode, set_filterMode);
		L.RegVar("maskMode", get_maskMode, set_maskMode);
		L.RegVar("style", get_style, set_style);
		L.RegVar("baseOffset", get_baseOffset, set_baseOffset);
		L.RegVar("relativeBaseOffset", get_relativeBaseOffset, set_relativeBaseOffset);
		L.RegVar("lineSpacing", get_lineSpacing, set_lineSpacing);
		L.RegVar("characterSpacing", get_characterSpacing, set_characterSpacing);
		L.RegVar("tabSize", get_tabSize, set_tabSize);
		L.RegVar("autoWrap", get_autoWrap, set_autoWrap);
		L.RegVar("uiWrap", get_uiWrap, set_uiWrap);
		L.RegVar("uiLimit", get_uiLimit, set_uiLimit);
		L.RegVar("breakText", get_breakText, set_breakText);
		L.RegVar("insertHyphens", get_insertHyphens, set_insertHyphens);
		L.RegVar("anchor", get_anchor, set_anchor);
		L.RegVar("alignment", get_alignment, set_alignment);
		L.RegVar("verticalLimit", get_verticalLimit, set_verticalLimit);
		L.RegVar("verticalLimitMode", get_verticalLimitMode, set_verticalLimitMode);
		L.RegVar("leftoverText", get_leftoverText, set_leftoverText);
		L.RegVar("textMaterial", get_textMaterial, set_textMaterial);
		L.RegVar("textMesh", get_textMesh, set_textMesh);
		L.RegVar("rawTopLeftBounds", get_rawTopLeftBounds, set_rawTopLeftBounds);
		L.RegVar("rawBottomRightBounds", get_rawBottomRightBounds, set_rawBottomRightBounds);
		L.RegVar("rawBottomRightTextBounds", get_rawBottomRightTextBounds, set_rawBottomRightTextBounds);
		L.RegVar("topLeftBounds", get_topLeftBounds, set_topLeftBounds);
		L.RegVar("topRightBounds", get_topRightBounds, set_topRightBounds);
		L.RegVar("bottomLeftBounds", get_bottomLeftBounds, set_bottomLeftBounds);
		L.RegVar("bottomRightBounds", get_bottomRightBounds, set_bottomRightBounds);
		L.RegVar("centerBounds", get_centerBounds, set_centerBounds);
		L.RegVar("topLeftTextBounds", get_topLeftTextBounds, set_topLeftTextBounds);
		L.RegVar("topRightTextBounds", get_topRightTextBounds, set_topRightTextBounds);
		L.RegVar("bottomLeftTextBounds", get_bottomLeftTextBounds, set_bottomLeftTextBounds);
		L.RegVar("bottomRightTextBounds", get_bottomRightTextBounds, set_bottomRightTextBounds);
		L.RegVar("centerTextBounds", get_centerTextBounds, set_centerTextBounds);
		L.RegVar("finalTopLeftTextBounds", get_finalTopLeftTextBounds, set_finalTopLeftTextBounds);
		L.RegVar("finalTopRightTextBounds", get_finalTopRightTextBounds, set_finalTopRightTextBounds);
		L.RegVar("finalBottomLeftTextBounds", get_finalBottomLeftTextBounds, set_finalBottomLeftTextBounds);
		L.RegVar("finalBottomRightTextBounds", get_finalBottomRightTextBounds, set_finalBottomRightTextBounds);
		L.RegVar("finalCenterTextBounds", get_finalCenterTextBounds, set_finalCenterTextBounds);
		L.RegVar("unwrappedBottomRightTextBounds", get_unwrappedBottomRightTextBounds, set_unwrappedBottomRightTextBounds);
		L.RegVar("onCompleteEvent", get_onCompleteEvent, set_onCompleteEvent);
		L.RegVar("onUndrawnEvent", get_onUndrawnEvent, set_onUndrawnEvent);
		L.RegVar("onRebuildEvent", get_onRebuildEvent, set_onRebuildEvent);
		L.RegVar("onPrintEvent", get_onPrintEvent, set_onPrintEvent);
		L.RegVar("onCustomEvent", get_onCustomEvent, set_onCustomEvent);
		L.RegVar("onVertexMod", get_onVertexMod, set_onVertexMod);
		L.RegVar("onPreParse", get_onPreParse, set_onPreParse);
		L.RegVar("debugMode", get_debugMode, set_debugMode);
		L.RegVar("totalReadTime", get_totalReadTime, set_totalReadTime);
		L.RegVar("totalUnreadTime", get_totalUnreadTime, set_totalUnreadTime);
		L.RegVar("currentReadTime", get_currentReadTime, set_currentReadTime);
		L.RegVar("autoRead", get_autoRead, set_autoRead);
		L.RegVar("rememberReadPosition", get_rememberReadPosition, set_rememberReadPosition);
		L.RegVar("autoQuality", get_autoQuality, set_autoQuality);
		L.RegVar("drawOrder", get_drawOrder, set_drawOrder);
		L.RegVar("removeEmoji", get_removeEmoji, set_removeEmoji);
		L.RegVar("rtl", get_rtl, set_rtl);
		L.RegVar("bestFit", get_bestFit, set_bestFit);
		L.RegVar("latestNumber", get_latestNumber, set_latestNumber);
		L.RegVar("currentUnReadTime", get_currentUnReadTime, set_currentUnReadTime);
		L.RegVar("preParsedText", get_preParsedText, set_preParsedText);
		L.RegVar("data", get_data, set_data);
		L.RegVar("t", get_t, null);
		L.RegVar("f", get_f, null);
		L.RegVar("r", get_r, null);
		L.RegVar("c", get_c, null);
		L.RegVar("uiMode", get_uiMode, null);
		L.RegVar("text", get_text, set_text);
		L.RegVar("Text", get_Text, set_Text);
		L.RegVar("color", get_color, set_color);
		L.RegVar("GetDeltaTime", get_GetDeltaTime, null);
		L.RegVar("GetTime", get_GetTime, null);
		L.RegVar("GetDeltaTime2", get_GetDeltaTime2, null);
		L.RegVar("AutoWrap", get_AutoWrap, null);
		L.RegVar("tr", get_tr, null);
		L.RegVar("pauseCount", get_pauseCount, null);
		L.RegVar("currentPauseCount", get_currentPauseCount, null);
		L.RegVar("canContinue", get_canContinue, null);
		L.RegVar("canUndoContinue", get_canUndoContinue, null);
		L.RegVar("fade", get_fade, set_fade);
		L.RegVar("minWidth", get_minWidth, null);
		L.RegVar("preferredWidth", get_preferredWidth, null);
		L.RegVar("flexibleWidth", get_flexibleWidth, null);
		L.RegVar("minHeight", get_minHeight, null);
		L.RegVar("preferredHeight", get_preferredHeight, null);
		L.RegVar("flexibleHeight", get_flexibleHeight, null);
		L.RegVar("layoutPriority", get_layoutPriority, null);
		L.RegVar("OnCompleteEvent", get_OnCompleteEvent, set_OnCompleteEvent);
		L.RegVar("OnUndrawnEvent", get_OnUndrawnEvent, set_OnUndrawnEvent);
		L.RegVar("OnRebuildEvent", get_OnRebuildEvent, set_OnRebuildEvent);
		L.RegVar("OnPrintEvent", get_OnPrintEvent, set_OnPrintEvent);
		L.RegVar("OnCustomEvent", get_OnCustomEvent, set_OnCustomEvent);
		L.RegVar("OnVertexMod", get_OnVertexMod, set_OnVertexMod);
		L.RegVar("OnPreParse", get_OnPreParse, set_OnPreParse);
		L.RegFunction("OnPreParseAction", SuperTextMesh_OnPreParseAction);
		L.RegFunction("OnVertexModAction", SuperTextMesh_OnVertexModAction);
		L.RegFunction("OnCustomAction", SuperTextMesh_OnCustomAction);
		L.RegFunction("OnPrintAction", SuperTextMesh_OnPrintAction);
		L.RegFunction("OnRebuildAction", SuperTextMesh_OnRebuildAction);
		L.RegFunction("OnUndrawnAction", SuperTextMesh_OnUndrawnAction);
		L.RegFunction("OnCompleteAction", SuperTextMesh_OnCompleteAction);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEmoji(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.RemoveEmoji(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnValidate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.OnValidate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	//[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	//static int HideInspectorStuff(IntPtr L)
	//{
	//	try
	//	{
	//		ToLua.CheckArgsCount(L, 1);
	//		SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
	//		obj.HideInspectorStuff();
	//		return 0;
	//	}
	//	catch (Exception e)
	//	{
	//		return LuaDLL.toluaL_exception(L, e);
	//	}
	//}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitializeFont(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.InitializeFont();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RebuildAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SuperTextMesh.RebuildAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Rebuild(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.Rebuild();
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<bool>(L, 2))
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				obj.Rebuild(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<float>(L, 2))
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.lua_tonumber(L, 2);
				obj.Rebuild(arg0);
				return 0;
			}
			else if (count == 3)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.Rebuild(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				obj.Rebuild(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.Rebuild");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Read(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.Read();
				return 0;
			}
			else if (count == 2)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.Read(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.Read");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Unread(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.Unread();
				return 0;
			}
			else if (count == 2)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.Unread(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.Unread");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Undraw(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.Undraw();
				return 0;
			}
			else if (count == 2)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.Undraw(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.Undraw");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnDraw(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.UnDraw();
				return 0;
			}
			else if (count == 2)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.UnDraw(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.UnDraw");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnRead(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				obj.UnRead();
				return 0;
			}
			else if (count == 2)
			{
				SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.UnRead(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SuperTextMesh.UnRead");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SpeedRead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.SpeedRead();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SkipToEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.SkipToEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegularRead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.RegularRead();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAllText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.ShowAllText();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Append(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Append(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Continue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			bool o = obj.Continue();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UndoContinue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			bool o = obj.UndoContinue();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlaySound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.PlaySound(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMesh(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearMaterials(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.ClearMaterials();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculateLayoutInputHorizontal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.CalculateLayoutInputHorizontal();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculateLayoutInputVertical(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.CalculateLayoutInputVertical();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RecalculateMasking(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject<SuperTextMesh>(L, 1);
			obj.RecalculateMasking();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showTextFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showTextFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showTextFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showAppearanceFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showAppearanceFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showAppearanceFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showMaterialFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showMaterialFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showMaterialFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showPositionFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showPositionFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showPositionFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showTimingFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showTimingFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showTimingFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showFunctionalityFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showFunctionalityFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showFunctionalityFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showAudioFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showAudioFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showAudioFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showEventFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showEventFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showEventFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showBetaFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.showBetaFoldout;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showBetaFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_info(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			System.Collections.Generic.List<STMTextInfo> ret = obj.info;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index info on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lineHeights(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			System.Collections.Generic.List<float> ret = obj.lineHeights;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineHeights on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj._text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.drawText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hyphenedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.hyphenedText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hyphenedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_font(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Font ret = obj.font;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index font on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__color32(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color32 ret = obj._color32;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _color32 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color ret = obj._color;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _color on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_forceAnimation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.forceAnimation;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceAnimation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_richText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.richText;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_readDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.readDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index readDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speedReadScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.speedReadScale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedReadScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ignoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.ignoreTimeScale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ignoreTimeScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_disableAnimatedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.disableAnimatedText;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index disableAnimatedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawAnimName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.drawAnimName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawAnimName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unreadDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.unreadDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unreadDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_undrawOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.DrawOrder ret = obj.undrawOrder;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index undrawOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_undrawAnimName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.undrawAnimName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index undrawAnimName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.AudioSource ret = obj.audioSource;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioClips(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.AudioClip[] ret = obj.audioClips;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioClips on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stopPreviousSound(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.stopPreviousSound;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stopPreviousSound on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pitchMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.PitchMode ret = obj.pitchMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pitchMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overridePitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.overridePitch;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overridePitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.minPitch;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.maxPitch;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speedReadPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.speedReadPitch;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedReadPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_perlinPitchMulti(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.perlinPitchMulti;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index perlinPitchMulti on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.reading;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reading on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unreading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.unreading;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unreading on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.size;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.minSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bestFitMulti(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.bestFitMulti;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bestFitMulti on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_quality(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int ret = obj.quality;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index quality on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_filterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.FilterMode ret = obj.filterMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index filterMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maskMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.MaskMode ret = obj.maskMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maskMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_style(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.FontStyle ret = obj.style;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index style on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_baseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.baseOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index baseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_relativeBaseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.relativeBaseOffset;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index relativeBaseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lineSpacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.lineSpacing;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineSpacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_characterSpacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.characterSpacing;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index characterSpacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tabSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.tabSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tabSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.autoWrap;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.uiWrap;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiLimit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.uiLimit;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiLimit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_breakText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.breakText;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index breakText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_insertHyphens(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.insertHyphens;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index insertHyphens on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_anchor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.TextAnchor ret = obj.anchor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index anchor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_alignment(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.Alignment ret = obj.alignment;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alignment on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_verticalLimit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.verticalLimit;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalLimit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_verticalLimitMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.VerticalLimitMode ret = obj.verticalLimitMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalLimitMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_leftoverText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.leftoverText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index leftoverText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Material ret = obj.textMaterial;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textMaterial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textMesh(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Mesh ret = obj.textMesh;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textMesh on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawTopLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.rawTopLeftBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawTopLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawBottomRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.rawBottomRightBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawBottomRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.rawBottomRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_topLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.topLeftBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_topRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.topRightBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottomLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.bottomLeftBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottomRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.bottomRightBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_centerBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.centerBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_topLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.topLeftTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_topRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.topRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottomLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.bottomLeftTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.bottomRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_centerTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.centerTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finalTopLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.finalTopLeftTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalTopLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finalTopRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.finalTopRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalTopRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finalBottomLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.finalBottomLeftTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalBottomLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finalBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.finalBottomRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finalCenterTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.finalCenterTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalCenterTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unwrappedBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 ret = obj.unwrappedBottomRightTextBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unwrappedBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCompleteEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent ret = obj.onCompleteEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCompleteEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUndrawnEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent ret = obj.onUndrawnEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUndrawnEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onRebuildEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent ret = obj.onRebuildEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onRebuildEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPrintEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent ret = obj.onPrintEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPrintEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCustomEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.CustomEvent ret = obj.onCustomEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCustomEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onVertexMod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.VertexMod ret = obj.onVertexMod;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onVertexMod on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPreParse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.PreParse ret = obj.onPreParse;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreParse on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_debugMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.debugMode;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index debugMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.totalReadTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalUnreadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.totalUnreadTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalUnreadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.currentReadTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoRead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.autoRead;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoRead on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rememberReadPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.rememberReadPosition;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rememberReadPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoQuality(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.autoQuality;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoQuality on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.DrawOrder ret = obj.drawOrder;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_removeEmoji(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.removeEmoji;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index removeEmoji on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rtl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.rtl;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rtl on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bestFit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.BestFitMode ret = obj.bestFit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bestFit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_latestNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int ret = obj.latestNumber;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index latestNumber on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentUnReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.currentUnReadTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentUnReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preParsedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.preParsedText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preParsedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMeshData ret = obj.data;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_t(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Transform ret = obj.t;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index t on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_f(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.MeshFilter ret = obj.f;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index f on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_r(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.MeshRenderer ret = obj.r;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index r on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_c(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.CanvasRenderer ret = obj.c;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index c on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.uiMode;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string ret = obj.Text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color ret = obj.color;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index color on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GetDeltaTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.GetDeltaTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GetDeltaTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GetTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.GetTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GetTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GetDeltaTime2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.GetDeltaTime2;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GetDeltaTime2 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.AutoWrap;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.RectTransform ret = obj.tr;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pauseCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int ret = obj.pauseCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pauseCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentPauseCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int ret = obj.currentPauseCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentPauseCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canContinue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.canContinue;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canContinue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canUndoContinue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool ret = obj.canUndoContinue;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canUndoContinue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fade(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.fade;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fade on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.minWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preferredWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.preferredWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preferredWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_flexibleWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.flexibleWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index flexibleWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.minHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preferredHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.preferredHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preferredHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_flexibleHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float ret = obj.flexibleHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index flexibleHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_layoutPriority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int ret = obj.layoutPriority;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index layoutPriority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnCompleteEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnCompleteAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnUndrawnEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnUndrawnAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnRebuildEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnRebuildAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPrintEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnPrintAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnCustomEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnCustomAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnVertexMod(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnVertexModAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPreParse(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(SuperTextMesh.OnPreParseAction)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showTextFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showTextFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showTextFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showAppearanceFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showAppearanceFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showAppearanceFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showMaterialFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showMaterialFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showMaterialFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showPositionFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showPositionFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showPositionFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showTimingFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showTimingFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showTimingFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showFunctionalityFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showFunctionalityFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showFunctionalityFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showAudioFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showAudioFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showAudioFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showEventFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showEventFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showEventFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showBetaFoldout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showBetaFoldout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showBetaFoldout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_info(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			System.Collections.Generic.List<STMTextInfo> arg0 = (System.Collections.Generic.List<STMTextInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<STMTextInfo>));
			obj.info = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index info on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lineHeights(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			System.Collections.Generic.List<float> arg0 = (System.Collections.Generic.List<float>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<float>));
			obj.lineHeights = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineHeights on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj._text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.drawText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hyphenedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.hyphenedText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hyphenedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_font(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Font arg0 = (UnityEngine.Font)ToLua.CheckObject(L, 2, typeof(UnityEngine.Font));
			obj.font = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index font on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__color32(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color32 arg0 = StackTraits<UnityEngine.Color32>.Check(L, 2);
			obj._color32 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _color32 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj._color = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _color on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_forceAnimation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.forceAnimation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceAnimation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_richText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.richText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_readDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.readDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index readDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speedReadScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.speedReadScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedReadScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ignoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ignoreTimeScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ignoreTimeScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_disableAnimatedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.disableAnimatedText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index disableAnimatedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawAnimName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.drawAnimName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawAnimName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unreadDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.unreadDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unreadDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_undrawOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.DrawOrder arg0 = (SuperTextMesh.DrawOrder)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.DrawOrder));
			obj.undrawOrder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index undrawOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_undrawAnimName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.undrawAnimName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index undrawAnimName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.AudioSource arg0 = (UnityEngine.AudioSource)ToLua.CheckObject(L, 2, typeof(UnityEngine.AudioSource));
			obj.audioSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioClips(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.AudioClip[] arg0 = ToLua.CheckObjectArray<UnityEngine.AudioClip>(L, 2);
			obj.audioClips = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioClips on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stopPreviousSound(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.stopPreviousSound = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stopPreviousSound on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pitchMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.PitchMode arg0 = (SuperTextMesh.PitchMode)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.PitchMode));
			obj.pitchMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pitchMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overridePitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.overridePitch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overridePitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_minPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.minPitch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxPitch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speedReadPitch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.speedReadPitch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedReadPitch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_perlinPitchMulti(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.perlinPitchMulti = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index perlinPitchMulti on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_reading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.reading = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reading on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unreading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.unreading = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unreading on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.size = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_minSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.minSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bestFitMulti(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.bestFitMulti = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bestFitMulti on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_quality(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.quality = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index quality on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_filterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.FilterMode arg0 = (UnityEngine.FilterMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.FilterMode));
			obj.filterMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index filterMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maskMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.MaskMode arg0 = (SuperTextMesh.MaskMode)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.MaskMode));
			obj.maskMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maskMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_style(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.FontStyle arg0 = (UnityEngine.FontStyle)ToLua.CheckObject(L, 2, typeof(UnityEngine.FontStyle));
			obj.style = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index style on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_baseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.baseOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index baseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_relativeBaseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.relativeBaseOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index relativeBaseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lineSpacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.lineSpacing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineSpacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_characterSpacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.characterSpacing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index characterSpacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tabSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tabSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tabSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.autoWrap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.uiWrap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiLimit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.uiLimit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiLimit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_breakText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.breakText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index breakText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_insertHyphens(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.insertHyphens = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index insertHyphens on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_anchor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.TextAnchor arg0 = (UnityEngine.TextAnchor)ToLua.CheckObject(L, 2, typeof(UnityEngine.TextAnchor));
			obj.anchor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index anchor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_alignment(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.Alignment arg0 = (SuperTextMesh.Alignment)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.Alignment));
			obj.alignment = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alignment on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_verticalLimit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.verticalLimit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalLimit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_verticalLimitMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.VerticalLimitMode arg0 = (SuperTextMesh.VerticalLimitMode)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.VerticalLimitMode));
			obj.verticalLimitMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalLimitMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_leftoverText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.leftoverText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index leftoverText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.textMaterial = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textMaterial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textMesh(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 2, typeof(UnityEngine.Mesh));
			obj.textMesh = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textMesh on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rawTopLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rawTopLeftBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawTopLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rawBottomRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rawBottomRightBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawBottomRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rawBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rawBottomRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_topLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.topLeftBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_topRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.topRightBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bottomLeftBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.bottomLeftBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomLeftBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bottomRightBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.bottomRightBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomRightBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_centerBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.centerBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_topLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.topLeftTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_topRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.topRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bottomLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.bottomLeftTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.bottomRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_centerTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.centerTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finalTopLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.finalTopLeftTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalTopLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finalTopRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.finalTopRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalTopRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finalBottomLeftTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.finalBottomLeftTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalBottomLeftTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finalBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.finalBottomRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finalCenterTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.finalCenterTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index finalCenterTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unwrappedBottomRightTextBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.unwrappedBottomRightTextBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index unwrappedBottomRightTextBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCompleteEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent arg0 = (UnityEngine.Events.UnityEvent)ToLua.CheckObject<UnityEngine.Events.UnityEvent>(L, 2);
			obj.onCompleteEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCompleteEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUndrawnEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent arg0 = (UnityEngine.Events.UnityEvent)ToLua.CheckObject<UnityEngine.Events.UnityEvent>(L, 2);
			obj.onUndrawnEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUndrawnEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onRebuildEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent arg0 = (UnityEngine.Events.UnityEvent)ToLua.CheckObject<UnityEngine.Events.UnityEvent>(L, 2);
			obj.onRebuildEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onRebuildEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPrintEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Events.UnityEvent arg0 = (UnityEngine.Events.UnityEvent)ToLua.CheckObject<UnityEngine.Events.UnityEvent>(L, 2);
			obj.onPrintEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPrintEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCustomEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.CustomEvent arg0 = (SuperTextMesh.CustomEvent)ToLua.CheckObject<SuperTextMesh.CustomEvent>(L, 2);
			obj.onCustomEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCustomEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onVertexMod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.VertexMod arg0 = (SuperTextMesh.VertexMod)ToLua.CheckObject<SuperTextMesh.VertexMod>(L, 2);
			obj.onVertexMod = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onVertexMod on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPreParse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.PreParse arg0 = (SuperTextMesh.PreParse)ToLua.CheckObject<SuperTextMesh.PreParse>(L, 2);
			obj.onPreParse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreParse on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_debugMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.debugMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index debugMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_totalReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.totalReadTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_totalUnreadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.totalUnreadTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalUnreadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.currentReadTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoRead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoRead = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoRead on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rememberReadPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.rememberReadPosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rememberReadPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoQuality(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoQuality = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoQuality on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.DrawOrder arg0 = (SuperTextMesh.DrawOrder)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.DrawOrder));
			obj.drawOrder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_removeEmoji(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.removeEmoji = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index removeEmoji on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rtl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.rtl = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rtl on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bestFit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMesh.BestFitMode arg0 = (SuperTextMesh.BestFitMode)ToLua.CheckObject(L, 2, typeof(SuperTextMesh.BestFitMode));
			obj.bestFit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bestFit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_latestNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.latestNumber = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index latestNumber on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentUnReadTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.currentUnReadTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentUnReadTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_preParsedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.preParsedText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preParsedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			SuperTextMeshData arg0 = (SuperTextMeshData)ToLua.CheckObject<SuperTextMeshData>(L, 2);
			obj.data = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.color = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index color on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fade(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SuperTextMesh obj = (SuperTextMesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fade = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fade on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnCompleteEvent(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnCompleteEvent' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnCompleteAction ev = (SuperTextMesh.OnCompleteAction)arg0.func;
				obj.OnCompleteEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnCompleteAction ev = (SuperTextMesh.OnCompleteAction)arg0.func;
				obj.OnCompleteEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnUndrawnEvent(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnUndrawnEvent' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnUndrawnAction ev = (SuperTextMesh.OnUndrawnAction)arg0.func;
				obj.OnUndrawnEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnUndrawnAction ev = (SuperTextMesh.OnUndrawnAction)arg0.func;
				obj.OnUndrawnEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnRebuildEvent(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnRebuildEvent' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnRebuildAction ev = (SuperTextMesh.OnRebuildAction)arg0.func;
				obj.OnRebuildEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnRebuildAction ev = (SuperTextMesh.OnRebuildAction)arg0.func;
				obj.OnRebuildEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPrintEvent(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnPrintEvent' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnPrintAction ev = (SuperTextMesh.OnPrintAction)arg0.func;
				obj.OnPrintEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnPrintAction ev = (SuperTextMesh.OnPrintAction)arg0.func;
				obj.OnPrintEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnCustomEvent(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnCustomEvent' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnCustomAction ev = (SuperTextMesh.OnCustomAction)arg0.func;
				obj.OnCustomEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnCustomAction ev = (SuperTextMesh.OnCustomAction)arg0.func;
				obj.OnCustomEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnVertexMod(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnVertexMod' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnVertexModAction ev = (SuperTextMesh.OnVertexModAction)arg0.func;
				obj.OnVertexMod += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnVertexModAction ev = (SuperTextMesh.OnVertexModAction)arg0.func;
				obj.OnVertexMod -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPreParse(IntPtr L)
	{
		try
		{
			SuperTextMesh obj = (SuperTextMesh)ToLua.CheckObject(L, 1, typeof(SuperTextMesh));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'SuperTextMesh.OnPreParse' can only appear on the left hand side of += or -= when used outside of the type 'SuperTextMesh'");
			}

			if (arg0.op == EventOp.Add)
			{
				SuperTextMesh.OnPreParseAction ev = (SuperTextMesh.OnPreParseAction)arg0.func;
				obj.OnPreParse += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				SuperTextMesh.OnPreParseAction ev = (SuperTextMesh.OnPreParseAction)arg0.func;
				obj.OnPreParse -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnPreParseAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnPreParseAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnPreParseAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnVertexModAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnVertexModAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnVertexModAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnCustomAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnCustomAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnCustomAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnPrintAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnPrintAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnPrintAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnRebuildAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnRebuildAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnRebuildAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnUndrawnAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnUndrawnAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnUndrawnAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SuperTextMesh_OnCompleteAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnCompleteAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<SuperTextMesh.OnCompleteAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

