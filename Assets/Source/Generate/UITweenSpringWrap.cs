//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UITweenSpringWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UITweenSpring), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("LerpMomentum", LerpMomentum);
		L.RegFunction("Rebound", Rebound);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("MomentumAmount", get_MomentumAmount, set_MomentumAmount);
		L.RegVar("Strength", get_Strength, set_Strength);
		L.RegVar("IsUseCallBack", get_IsUseCallBack, set_IsUseCallBack);
		L.RegVar("Momentum", get_Momentum, set_Momentum);
		L.RegVar("OnUpdate", get_OnUpdate, set_OnUpdate);
		L.RegVar("OnMoveEnd", get_OnMoveEnd, set_OnMoveEnd);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LerpMomentum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UITweenSpring obj = (UITweenSpring)ToLua.CheckObject<UITweenSpring>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.LerpMomentum(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Rebound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UITweenSpring obj = (UITweenSpring)ToLua.CheckObject<UITweenSpring>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.Rebound(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MomentumAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			float ret = obj.MomentumAmount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MomentumAmount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Strength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			float ret = obj.Strength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Strength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsUseCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			bool ret = obj.IsUseCallBack;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsUseCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Momentum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			UnityEngine.Vector3 ret = obj.Momentum;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Momentum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			CallBack<UnityEngine.Vector3> ret = obj.OnUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnMoveEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			CallBack ret = obj.OnMoveEnd;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnMoveEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MomentumAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MomentumAmount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MomentumAmount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Strength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Strength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Strength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsUseCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsUseCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsUseCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Momentum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Momentum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Momentum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			CallBack<UnityEngine.Vector3> arg0 = (CallBack<UnityEngine.Vector3>)ToLua.CheckDelegate<CallBack<UnityEngine.Vector3>>(L, 2);
			obj.OnUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnMoveEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UITweenSpring obj = (UITweenSpring)o;
			CallBack arg0 = (CallBack)ToLua.CheckDelegate<CallBack>(L, 2);
			obj.OnMoveEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnMoveEnd on a nil value");
		}
	}
}

